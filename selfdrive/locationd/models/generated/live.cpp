#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with sympy 1.9                        *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_2599424605208563416) {
   out_2599424605208563416[0] = 0;
   out_2599424605208563416[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_2599424605208563416[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_2599424605208563416[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_2599424605208563416[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_2599424605208563416[5] = -sin(in_vec[1]);
   out_2599424605208563416[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_2599424605208563416[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_2599424605208563416[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_2599424605208563416[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_2599424605208563416[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_2599424605208563416[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_2599424605208563416[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_2599424605208563416[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_2599424605208563416[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_2599424605208563416[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_2599424605208563416[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_2599424605208563416[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_5906482688677727015) {
   out_5906482688677727015[0] = delta_x[0] + nom_x[0];
   out_5906482688677727015[1] = delta_x[1] + nom_x[1];
   out_5906482688677727015[2] = delta_x[2] + nom_x[2];
   out_5906482688677727015[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_5906482688677727015[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_5906482688677727015[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_5906482688677727015[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_5906482688677727015[7] = delta_x[6] + nom_x[7];
   out_5906482688677727015[8] = delta_x[7] + nom_x[8];
   out_5906482688677727015[9] = delta_x[8] + nom_x[9];
   out_5906482688677727015[10] = delta_x[9] + nom_x[10];
   out_5906482688677727015[11] = delta_x[10] + nom_x[11];
   out_5906482688677727015[12] = delta_x[11] + nom_x[12];
   out_5906482688677727015[13] = delta_x[12] + nom_x[13];
   out_5906482688677727015[14] = delta_x[13] + nom_x[14];
   out_5906482688677727015[15] = delta_x[14] + nom_x[15];
   out_5906482688677727015[16] = delta_x[15] + nom_x[16];
   out_5906482688677727015[17] = delta_x[16] + nom_x[17];
   out_5906482688677727015[18] = delta_x[17] + nom_x[18];
   out_5906482688677727015[19] = delta_x[18] + nom_x[19];
   out_5906482688677727015[20] = delta_x[19] + nom_x[20];
   out_5906482688677727015[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_4105895011660699419) {
   out_4105895011660699419[0] = -nom_x[0] + true_x[0];
   out_4105895011660699419[1] = -nom_x[1] + true_x[1];
   out_4105895011660699419[2] = -nom_x[2] + true_x[2];
   out_4105895011660699419[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_4105895011660699419[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_4105895011660699419[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_4105895011660699419[6] = -nom_x[7] + true_x[7];
   out_4105895011660699419[7] = -nom_x[8] + true_x[8];
   out_4105895011660699419[8] = -nom_x[9] + true_x[9];
   out_4105895011660699419[9] = -nom_x[10] + true_x[10];
   out_4105895011660699419[10] = -nom_x[11] + true_x[11];
   out_4105895011660699419[11] = -nom_x[12] + true_x[12];
   out_4105895011660699419[12] = -nom_x[13] + true_x[13];
   out_4105895011660699419[13] = -nom_x[14] + true_x[14];
   out_4105895011660699419[14] = -nom_x[15] + true_x[15];
   out_4105895011660699419[15] = -nom_x[16] + true_x[16];
   out_4105895011660699419[16] = -nom_x[17] + true_x[17];
   out_4105895011660699419[17] = -nom_x[18] + true_x[18];
   out_4105895011660699419[18] = -nom_x[19] + true_x[19];
   out_4105895011660699419[19] = -nom_x[20] + true_x[20];
   out_4105895011660699419[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_2441862623175928931) {
   out_2441862623175928931[0] = 1.0;
   out_2441862623175928931[1] = 0;
   out_2441862623175928931[2] = 0;
   out_2441862623175928931[3] = 0;
   out_2441862623175928931[4] = 0;
   out_2441862623175928931[5] = 0;
   out_2441862623175928931[6] = 0;
   out_2441862623175928931[7] = 0;
   out_2441862623175928931[8] = 0;
   out_2441862623175928931[9] = 0;
   out_2441862623175928931[10] = 0;
   out_2441862623175928931[11] = 0;
   out_2441862623175928931[12] = 0;
   out_2441862623175928931[13] = 0;
   out_2441862623175928931[14] = 0;
   out_2441862623175928931[15] = 0;
   out_2441862623175928931[16] = 0;
   out_2441862623175928931[17] = 0;
   out_2441862623175928931[18] = 0;
   out_2441862623175928931[19] = 0;
   out_2441862623175928931[20] = 0;
   out_2441862623175928931[21] = 0;
   out_2441862623175928931[22] = 1.0;
   out_2441862623175928931[23] = 0;
   out_2441862623175928931[24] = 0;
   out_2441862623175928931[25] = 0;
   out_2441862623175928931[26] = 0;
   out_2441862623175928931[27] = 0;
   out_2441862623175928931[28] = 0;
   out_2441862623175928931[29] = 0;
   out_2441862623175928931[30] = 0;
   out_2441862623175928931[31] = 0;
   out_2441862623175928931[32] = 0;
   out_2441862623175928931[33] = 0;
   out_2441862623175928931[34] = 0;
   out_2441862623175928931[35] = 0;
   out_2441862623175928931[36] = 0;
   out_2441862623175928931[37] = 0;
   out_2441862623175928931[38] = 0;
   out_2441862623175928931[39] = 0;
   out_2441862623175928931[40] = 0;
   out_2441862623175928931[41] = 0;
   out_2441862623175928931[42] = 0;
   out_2441862623175928931[43] = 0;
   out_2441862623175928931[44] = 1.0;
   out_2441862623175928931[45] = 0;
   out_2441862623175928931[46] = 0;
   out_2441862623175928931[47] = 0;
   out_2441862623175928931[48] = 0;
   out_2441862623175928931[49] = 0;
   out_2441862623175928931[50] = 0;
   out_2441862623175928931[51] = 0;
   out_2441862623175928931[52] = 0;
   out_2441862623175928931[53] = 0;
   out_2441862623175928931[54] = 0;
   out_2441862623175928931[55] = 0;
   out_2441862623175928931[56] = 0;
   out_2441862623175928931[57] = 0;
   out_2441862623175928931[58] = 0;
   out_2441862623175928931[59] = 0;
   out_2441862623175928931[60] = 0;
   out_2441862623175928931[61] = 0;
   out_2441862623175928931[62] = 0;
   out_2441862623175928931[63] = 0;
   out_2441862623175928931[64] = 0;
   out_2441862623175928931[65] = 0;
   out_2441862623175928931[66] = -0.5*state[4];
   out_2441862623175928931[67] = -0.5*state[5];
   out_2441862623175928931[68] = -0.5*state[6];
   out_2441862623175928931[69] = 0;
   out_2441862623175928931[70] = 0;
   out_2441862623175928931[71] = 0;
   out_2441862623175928931[72] = 0;
   out_2441862623175928931[73] = 0;
   out_2441862623175928931[74] = 0;
   out_2441862623175928931[75] = 0;
   out_2441862623175928931[76] = 0;
   out_2441862623175928931[77] = 0;
   out_2441862623175928931[78] = 0;
   out_2441862623175928931[79] = 0;
   out_2441862623175928931[80] = 0;
   out_2441862623175928931[81] = 0;
   out_2441862623175928931[82] = 0;
   out_2441862623175928931[83] = 0;
   out_2441862623175928931[84] = 0;
   out_2441862623175928931[85] = 0;
   out_2441862623175928931[86] = 0;
   out_2441862623175928931[87] = 0.5*state[3];
   out_2441862623175928931[88] = 0.5*state[6];
   out_2441862623175928931[89] = -0.5*state[5];
   out_2441862623175928931[90] = 0;
   out_2441862623175928931[91] = 0;
   out_2441862623175928931[92] = 0;
   out_2441862623175928931[93] = 0;
   out_2441862623175928931[94] = 0;
   out_2441862623175928931[95] = 0;
   out_2441862623175928931[96] = 0;
   out_2441862623175928931[97] = 0;
   out_2441862623175928931[98] = 0;
   out_2441862623175928931[99] = 0;
   out_2441862623175928931[100] = 0;
   out_2441862623175928931[101] = 0;
   out_2441862623175928931[102] = 0;
   out_2441862623175928931[103] = 0;
   out_2441862623175928931[104] = 0;
   out_2441862623175928931[105] = 0;
   out_2441862623175928931[106] = 0;
   out_2441862623175928931[107] = 0;
   out_2441862623175928931[108] = -0.5*state[6];
   out_2441862623175928931[109] = 0.5*state[3];
   out_2441862623175928931[110] = 0.5*state[4];
   out_2441862623175928931[111] = 0;
   out_2441862623175928931[112] = 0;
   out_2441862623175928931[113] = 0;
   out_2441862623175928931[114] = 0;
   out_2441862623175928931[115] = 0;
   out_2441862623175928931[116] = 0;
   out_2441862623175928931[117] = 0;
   out_2441862623175928931[118] = 0;
   out_2441862623175928931[119] = 0;
   out_2441862623175928931[120] = 0;
   out_2441862623175928931[121] = 0;
   out_2441862623175928931[122] = 0;
   out_2441862623175928931[123] = 0;
   out_2441862623175928931[124] = 0;
   out_2441862623175928931[125] = 0;
   out_2441862623175928931[126] = 0;
   out_2441862623175928931[127] = 0;
   out_2441862623175928931[128] = 0;
   out_2441862623175928931[129] = 0.5*state[5];
   out_2441862623175928931[130] = -0.5*state[4];
   out_2441862623175928931[131] = 0.5*state[3];
   out_2441862623175928931[132] = 0;
   out_2441862623175928931[133] = 0;
   out_2441862623175928931[134] = 0;
   out_2441862623175928931[135] = 0;
   out_2441862623175928931[136] = 0;
   out_2441862623175928931[137] = 0;
   out_2441862623175928931[138] = 0;
   out_2441862623175928931[139] = 0;
   out_2441862623175928931[140] = 0;
   out_2441862623175928931[141] = 0;
   out_2441862623175928931[142] = 0;
   out_2441862623175928931[143] = 0;
   out_2441862623175928931[144] = 0;
   out_2441862623175928931[145] = 0;
   out_2441862623175928931[146] = 0;
   out_2441862623175928931[147] = 0;
   out_2441862623175928931[148] = 0;
   out_2441862623175928931[149] = 0;
   out_2441862623175928931[150] = 0;
   out_2441862623175928931[151] = 0;
   out_2441862623175928931[152] = 0;
   out_2441862623175928931[153] = 1.0;
   out_2441862623175928931[154] = 0;
   out_2441862623175928931[155] = 0;
   out_2441862623175928931[156] = 0;
   out_2441862623175928931[157] = 0;
   out_2441862623175928931[158] = 0;
   out_2441862623175928931[159] = 0;
   out_2441862623175928931[160] = 0;
   out_2441862623175928931[161] = 0;
   out_2441862623175928931[162] = 0;
   out_2441862623175928931[163] = 0;
   out_2441862623175928931[164] = 0;
   out_2441862623175928931[165] = 0;
   out_2441862623175928931[166] = 0;
   out_2441862623175928931[167] = 0;
   out_2441862623175928931[168] = 0;
   out_2441862623175928931[169] = 0;
   out_2441862623175928931[170] = 0;
   out_2441862623175928931[171] = 0;
   out_2441862623175928931[172] = 0;
   out_2441862623175928931[173] = 0;
   out_2441862623175928931[174] = 0;
   out_2441862623175928931[175] = 1.0;
   out_2441862623175928931[176] = 0;
   out_2441862623175928931[177] = 0;
   out_2441862623175928931[178] = 0;
   out_2441862623175928931[179] = 0;
   out_2441862623175928931[180] = 0;
   out_2441862623175928931[181] = 0;
   out_2441862623175928931[182] = 0;
   out_2441862623175928931[183] = 0;
   out_2441862623175928931[184] = 0;
   out_2441862623175928931[185] = 0;
   out_2441862623175928931[186] = 0;
   out_2441862623175928931[187] = 0;
   out_2441862623175928931[188] = 0;
   out_2441862623175928931[189] = 0;
   out_2441862623175928931[190] = 0;
   out_2441862623175928931[191] = 0;
   out_2441862623175928931[192] = 0;
   out_2441862623175928931[193] = 0;
   out_2441862623175928931[194] = 0;
   out_2441862623175928931[195] = 0;
   out_2441862623175928931[196] = 0;
   out_2441862623175928931[197] = 1.0;
   out_2441862623175928931[198] = 0;
   out_2441862623175928931[199] = 0;
   out_2441862623175928931[200] = 0;
   out_2441862623175928931[201] = 0;
   out_2441862623175928931[202] = 0;
   out_2441862623175928931[203] = 0;
   out_2441862623175928931[204] = 0;
   out_2441862623175928931[205] = 0;
   out_2441862623175928931[206] = 0;
   out_2441862623175928931[207] = 0;
   out_2441862623175928931[208] = 0;
   out_2441862623175928931[209] = 0;
   out_2441862623175928931[210] = 0;
   out_2441862623175928931[211] = 0;
   out_2441862623175928931[212] = 0;
   out_2441862623175928931[213] = 0;
   out_2441862623175928931[214] = 0;
   out_2441862623175928931[215] = 0;
   out_2441862623175928931[216] = 0;
   out_2441862623175928931[217] = 0;
   out_2441862623175928931[218] = 0;
   out_2441862623175928931[219] = 1.0;
   out_2441862623175928931[220] = 0;
   out_2441862623175928931[221] = 0;
   out_2441862623175928931[222] = 0;
   out_2441862623175928931[223] = 0;
   out_2441862623175928931[224] = 0;
   out_2441862623175928931[225] = 0;
   out_2441862623175928931[226] = 0;
   out_2441862623175928931[227] = 0;
   out_2441862623175928931[228] = 0;
   out_2441862623175928931[229] = 0;
   out_2441862623175928931[230] = 0;
   out_2441862623175928931[231] = 0;
   out_2441862623175928931[232] = 0;
   out_2441862623175928931[233] = 0;
   out_2441862623175928931[234] = 0;
   out_2441862623175928931[235] = 0;
   out_2441862623175928931[236] = 0;
   out_2441862623175928931[237] = 0;
   out_2441862623175928931[238] = 0;
   out_2441862623175928931[239] = 0;
   out_2441862623175928931[240] = 0;
   out_2441862623175928931[241] = 1.0;
   out_2441862623175928931[242] = 0;
   out_2441862623175928931[243] = 0;
   out_2441862623175928931[244] = 0;
   out_2441862623175928931[245] = 0;
   out_2441862623175928931[246] = 0;
   out_2441862623175928931[247] = 0;
   out_2441862623175928931[248] = 0;
   out_2441862623175928931[249] = 0;
   out_2441862623175928931[250] = 0;
   out_2441862623175928931[251] = 0;
   out_2441862623175928931[252] = 0;
   out_2441862623175928931[253] = 0;
   out_2441862623175928931[254] = 0;
   out_2441862623175928931[255] = 0;
   out_2441862623175928931[256] = 0;
   out_2441862623175928931[257] = 0;
   out_2441862623175928931[258] = 0;
   out_2441862623175928931[259] = 0;
   out_2441862623175928931[260] = 0;
   out_2441862623175928931[261] = 0;
   out_2441862623175928931[262] = 0;
   out_2441862623175928931[263] = 1.0;
   out_2441862623175928931[264] = 0;
   out_2441862623175928931[265] = 0;
   out_2441862623175928931[266] = 0;
   out_2441862623175928931[267] = 0;
   out_2441862623175928931[268] = 0;
   out_2441862623175928931[269] = 0;
   out_2441862623175928931[270] = 0;
   out_2441862623175928931[271] = 0;
   out_2441862623175928931[272] = 0;
   out_2441862623175928931[273] = 0;
   out_2441862623175928931[274] = 0;
   out_2441862623175928931[275] = 0;
   out_2441862623175928931[276] = 0;
   out_2441862623175928931[277] = 0;
   out_2441862623175928931[278] = 0;
   out_2441862623175928931[279] = 0;
   out_2441862623175928931[280] = 0;
   out_2441862623175928931[281] = 0;
   out_2441862623175928931[282] = 0;
   out_2441862623175928931[283] = 0;
   out_2441862623175928931[284] = 0;
   out_2441862623175928931[285] = 1.0;
   out_2441862623175928931[286] = 0;
   out_2441862623175928931[287] = 0;
   out_2441862623175928931[288] = 0;
   out_2441862623175928931[289] = 0;
   out_2441862623175928931[290] = 0;
   out_2441862623175928931[291] = 0;
   out_2441862623175928931[292] = 0;
   out_2441862623175928931[293] = 0;
   out_2441862623175928931[294] = 0;
   out_2441862623175928931[295] = 0;
   out_2441862623175928931[296] = 0;
   out_2441862623175928931[297] = 0;
   out_2441862623175928931[298] = 0;
   out_2441862623175928931[299] = 0;
   out_2441862623175928931[300] = 0;
   out_2441862623175928931[301] = 0;
   out_2441862623175928931[302] = 0;
   out_2441862623175928931[303] = 0;
   out_2441862623175928931[304] = 0;
   out_2441862623175928931[305] = 0;
   out_2441862623175928931[306] = 0;
   out_2441862623175928931[307] = 1.0;
   out_2441862623175928931[308] = 0;
   out_2441862623175928931[309] = 0;
   out_2441862623175928931[310] = 0;
   out_2441862623175928931[311] = 0;
   out_2441862623175928931[312] = 0;
   out_2441862623175928931[313] = 0;
   out_2441862623175928931[314] = 0;
   out_2441862623175928931[315] = 0;
   out_2441862623175928931[316] = 0;
   out_2441862623175928931[317] = 0;
   out_2441862623175928931[318] = 0;
   out_2441862623175928931[319] = 0;
   out_2441862623175928931[320] = 0;
   out_2441862623175928931[321] = 0;
   out_2441862623175928931[322] = 0;
   out_2441862623175928931[323] = 0;
   out_2441862623175928931[324] = 0;
   out_2441862623175928931[325] = 0;
   out_2441862623175928931[326] = 0;
   out_2441862623175928931[327] = 0;
   out_2441862623175928931[328] = 0;
   out_2441862623175928931[329] = 1.0;
   out_2441862623175928931[330] = 0;
   out_2441862623175928931[331] = 0;
   out_2441862623175928931[332] = 0;
   out_2441862623175928931[333] = 0;
   out_2441862623175928931[334] = 0;
   out_2441862623175928931[335] = 0;
   out_2441862623175928931[336] = 0;
   out_2441862623175928931[337] = 0;
   out_2441862623175928931[338] = 0;
   out_2441862623175928931[339] = 0;
   out_2441862623175928931[340] = 0;
   out_2441862623175928931[341] = 0;
   out_2441862623175928931[342] = 0;
   out_2441862623175928931[343] = 0;
   out_2441862623175928931[344] = 0;
   out_2441862623175928931[345] = 0;
   out_2441862623175928931[346] = 0;
   out_2441862623175928931[347] = 0;
   out_2441862623175928931[348] = 0;
   out_2441862623175928931[349] = 0;
   out_2441862623175928931[350] = 0;
   out_2441862623175928931[351] = 1.0;
   out_2441862623175928931[352] = 0;
   out_2441862623175928931[353] = 0;
   out_2441862623175928931[354] = 0;
   out_2441862623175928931[355] = 0;
   out_2441862623175928931[356] = 0;
   out_2441862623175928931[357] = 0;
   out_2441862623175928931[358] = 0;
   out_2441862623175928931[359] = 0;
   out_2441862623175928931[360] = 0;
   out_2441862623175928931[361] = 0;
   out_2441862623175928931[362] = 0;
   out_2441862623175928931[363] = 0;
   out_2441862623175928931[364] = 0;
   out_2441862623175928931[365] = 0;
   out_2441862623175928931[366] = 0;
   out_2441862623175928931[367] = 0;
   out_2441862623175928931[368] = 0;
   out_2441862623175928931[369] = 0;
   out_2441862623175928931[370] = 0;
   out_2441862623175928931[371] = 0;
   out_2441862623175928931[372] = 0;
   out_2441862623175928931[373] = 1.0;
   out_2441862623175928931[374] = 0;
   out_2441862623175928931[375] = 0;
   out_2441862623175928931[376] = 0;
   out_2441862623175928931[377] = 0;
   out_2441862623175928931[378] = 0;
   out_2441862623175928931[379] = 0;
   out_2441862623175928931[380] = 0;
   out_2441862623175928931[381] = 0;
   out_2441862623175928931[382] = 0;
   out_2441862623175928931[383] = 0;
   out_2441862623175928931[384] = 0;
   out_2441862623175928931[385] = 0;
   out_2441862623175928931[386] = 0;
   out_2441862623175928931[387] = 0;
   out_2441862623175928931[388] = 0;
   out_2441862623175928931[389] = 0;
   out_2441862623175928931[390] = 0;
   out_2441862623175928931[391] = 0;
   out_2441862623175928931[392] = 0;
   out_2441862623175928931[393] = 0;
   out_2441862623175928931[394] = 0;
   out_2441862623175928931[395] = 1.0;
   out_2441862623175928931[396] = 0;
   out_2441862623175928931[397] = 0;
   out_2441862623175928931[398] = 0;
   out_2441862623175928931[399] = 0;
   out_2441862623175928931[400] = 0;
   out_2441862623175928931[401] = 0;
   out_2441862623175928931[402] = 0;
   out_2441862623175928931[403] = 0;
   out_2441862623175928931[404] = 0;
   out_2441862623175928931[405] = 0;
   out_2441862623175928931[406] = 0;
   out_2441862623175928931[407] = 0;
   out_2441862623175928931[408] = 0;
   out_2441862623175928931[409] = 0;
   out_2441862623175928931[410] = 0;
   out_2441862623175928931[411] = 0;
   out_2441862623175928931[412] = 0;
   out_2441862623175928931[413] = 0;
   out_2441862623175928931[414] = 0;
   out_2441862623175928931[415] = 0;
   out_2441862623175928931[416] = 0;
   out_2441862623175928931[417] = 1.0;
   out_2441862623175928931[418] = 0;
   out_2441862623175928931[419] = 0;
   out_2441862623175928931[420] = 0;
   out_2441862623175928931[421] = 0;
   out_2441862623175928931[422] = 0;
   out_2441862623175928931[423] = 0;
   out_2441862623175928931[424] = 0;
   out_2441862623175928931[425] = 0;
   out_2441862623175928931[426] = 0;
   out_2441862623175928931[427] = 0;
   out_2441862623175928931[428] = 0;
   out_2441862623175928931[429] = 0;
   out_2441862623175928931[430] = 0;
   out_2441862623175928931[431] = 0;
   out_2441862623175928931[432] = 0;
   out_2441862623175928931[433] = 0;
   out_2441862623175928931[434] = 0;
   out_2441862623175928931[435] = 0;
   out_2441862623175928931[436] = 0;
   out_2441862623175928931[437] = 0;
   out_2441862623175928931[438] = 0;
   out_2441862623175928931[439] = 1.0;
   out_2441862623175928931[440] = 0;
   out_2441862623175928931[441] = 0;
   out_2441862623175928931[442] = 0;
   out_2441862623175928931[443] = 0;
   out_2441862623175928931[444] = 0;
   out_2441862623175928931[445] = 0;
   out_2441862623175928931[446] = 0;
   out_2441862623175928931[447] = 0;
   out_2441862623175928931[448] = 0;
   out_2441862623175928931[449] = 0;
   out_2441862623175928931[450] = 0;
   out_2441862623175928931[451] = 0;
   out_2441862623175928931[452] = 0;
   out_2441862623175928931[453] = 0;
   out_2441862623175928931[454] = 0;
   out_2441862623175928931[455] = 0;
   out_2441862623175928931[456] = 0;
   out_2441862623175928931[457] = 0;
   out_2441862623175928931[458] = 0;
   out_2441862623175928931[459] = 0;
   out_2441862623175928931[460] = 0;
   out_2441862623175928931[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_983049846573028201) {
   out_983049846573028201[0] = dt*state[7] + state[0];
   out_983049846573028201[1] = dt*state[8] + state[1];
   out_983049846573028201[2] = dt*state[9] + state[2];
   out_983049846573028201[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_983049846573028201[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_983049846573028201[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_983049846573028201[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_983049846573028201[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_983049846573028201[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_983049846573028201[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_983049846573028201[10] = state[10];
   out_983049846573028201[11] = state[11];
   out_983049846573028201[12] = state[12];
   out_983049846573028201[13] = state[13];
   out_983049846573028201[14] = state[14];
   out_983049846573028201[15] = state[15];
   out_983049846573028201[16] = state[16];
   out_983049846573028201[17] = state[17];
   out_983049846573028201[18] = state[18];
   out_983049846573028201[19] = state[19];
   out_983049846573028201[20] = state[20];
   out_983049846573028201[21] = state[21];
}
void F_fun(double *state, double dt, double *out_2308345629494973071) {
   out_2308345629494973071[0] = 1;
   out_2308345629494973071[1] = 0;
   out_2308345629494973071[2] = 0;
   out_2308345629494973071[3] = 0;
   out_2308345629494973071[4] = 0;
   out_2308345629494973071[5] = 0;
   out_2308345629494973071[6] = dt;
   out_2308345629494973071[7] = 0;
   out_2308345629494973071[8] = 0;
   out_2308345629494973071[9] = 0;
   out_2308345629494973071[10] = 0;
   out_2308345629494973071[11] = 0;
   out_2308345629494973071[12] = 0;
   out_2308345629494973071[13] = 0;
   out_2308345629494973071[14] = 0;
   out_2308345629494973071[15] = 0;
   out_2308345629494973071[16] = 0;
   out_2308345629494973071[17] = 0;
   out_2308345629494973071[18] = 0;
   out_2308345629494973071[19] = 0;
   out_2308345629494973071[20] = 0;
   out_2308345629494973071[21] = 0;
   out_2308345629494973071[22] = 1;
   out_2308345629494973071[23] = 0;
   out_2308345629494973071[24] = 0;
   out_2308345629494973071[25] = 0;
   out_2308345629494973071[26] = 0;
   out_2308345629494973071[27] = 0;
   out_2308345629494973071[28] = dt;
   out_2308345629494973071[29] = 0;
   out_2308345629494973071[30] = 0;
   out_2308345629494973071[31] = 0;
   out_2308345629494973071[32] = 0;
   out_2308345629494973071[33] = 0;
   out_2308345629494973071[34] = 0;
   out_2308345629494973071[35] = 0;
   out_2308345629494973071[36] = 0;
   out_2308345629494973071[37] = 0;
   out_2308345629494973071[38] = 0;
   out_2308345629494973071[39] = 0;
   out_2308345629494973071[40] = 0;
   out_2308345629494973071[41] = 0;
   out_2308345629494973071[42] = 0;
   out_2308345629494973071[43] = 0;
   out_2308345629494973071[44] = 1;
   out_2308345629494973071[45] = 0;
   out_2308345629494973071[46] = 0;
   out_2308345629494973071[47] = 0;
   out_2308345629494973071[48] = 0;
   out_2308345629494973071[49] = 0;
   out_2308345629494973071[50] = dt;
   out_2308345629494973071[51] = 0;
   out_2308345629494973071[52] = 0;
   out_2308345629494973071[53] = 0;
   out_2308345629494973071[54] = 0;
   out_2308345629494973071[55] = 0;
   out_2308345629494973071[56] = 0;
   out_2308345629494973071[57] = 0;
   out_2308345629494973071[58] = 0;
   out_2308345629494973071[59] = 0;
   out_2308345629494973071[60] = 0;
   out_2308345629494973071[61] = 0;
   out_2308345629494973071[62] = 0;
   out_2308345629494973071[63] = 0;
   out_2308345629494973071[64] = 0;
   out_2308345629494973071[65] = 0;
   out_2308345629494973071[66] = 1;
   out_2308345629494973071[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_2308345629494973071[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_2308345629494973071[69] = 0;
   out_2308345629494973071[70] = 0;
   out_2308345629494973071[71] = 0;
   out_2308345629494973071[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_2308345629494973071[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_2308345629494973071[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_2308345629494973071[75] = 0;
   out_2308345629494973071[76] = 0;
   out_2308345629494973071[77] = 0;
   out_2308345629494973071[78] = 0;
   out_2308345629494973071[79] = 0;
   out_2308345629494973071[80] = 0;
   out_2308345629494973071[81] = 0;
   out_2308345629494973071[82] = 0;
   out_2308345629494973071[83] = 0;
   out_2308345629494973071[84] = 0;
   out_2308345629494973071[85] = 0;
   out_2308345629494973071[86] = 0;
   out_2308345629494973071[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_2308345629494973071[88] = 1;
   out_2308345629494973071[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_2308345629494973071[90] = 0;
   out_2308345629494973071[91] = 0;
   out_2308345629494973071[92] = 0;
   out_2308345629494973071[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_2308345629494973071[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_2308345629494973071[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_2308345629494973071[96] = 0;
   out_2308345629494973071[97] = 0;
   out_2308345629494973071[98] = 0;
   out_2308345629494973071[99] = 0;
   out_2308345629494973071[100] = 0;
   out_2308345629494973071[101] = 0;
   out_2308345629494973071[102] = 0;
   out_2308345629494973071[103] = 0;
   out_2308345629494973071[104] = 0;
   out_2308345629494973071[105] = 0;
   out_2308345629494973071[106] = 0;
   out_2308345629494973071[107] = 0;
   out_2308345629494973071[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_2308345629494973071[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_2308345629494973071[110] = 1;
   out_2308345629494973071[111] = 0;
   out_2308345629494973071[112] = 0;
   out_2308345629494973071[113] = 0;
   out_2308345629494973071[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_2308345629494973071[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_2308345629494973071[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_2308345629494973071[117] = 0;
   out_2308345629494973071[118] = 0;
   out_2308345629494973071[119] = 0;
   out_2308345629494973071[120] = 0;
   out_2308345629494973071[121] = 0;
   out_2308345629494973071[122] = 0;
   out_2308345629494973071[123] = 0;
   out_2308345629494973071[124] = 0;
   out_2308345629494973071[125] = 0;
   out_2308345629494973071[126] = 0;
   out_2308345629494973071[127] = 0;
   out_2308345629494973071[128] = 0;
   out_2308345629494973071[129] = 0;
   out_2308345629494973071[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_2308345629494973071[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_2308345629494973071[132] = 1;
   out_2308345629494973071[133] = 0;
   out_2308345629494973071[134] = 0;
   out_2308345629494973071[135] = 0;
   out_2308345629494973071[136] = 0;
   out_2308345629494973071[137] = 0;
   out_2308345629494973071[138] = 0;
   out_2308345629494973071[139] = 0;
   out_2308345629494973071[140] = 0;
   out_2308345629494973071[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_2308345629494973071[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_2308345629494973071[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_2308345629494973071[144] = 0;
   out_2308345629494973071[145] = 0;
   out_2308345629494973071[146] = 0;
   out_2308345629494973071[147] = 0;
   out_2308345629494973071[148] = 0;
   out_2308345629494973071[149] = 0;
   out_2308345629494973071[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_2308345629494973071[151] = 0;
   out_2308345629494973071[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_2308345629494973071[153] = 0;
   out_2308345629494973071[154] = 1;
   out_2308345629494973071[155] = 0;
   out_2308345629494973071[156] = 0;
   out_2308345629494973071[157] = 0;
   out_2308345629494973071[158] = 0;
   out_2308345629494973071[159] = 0;
   out_2308345629494973071[160] = 0;
   out_2308345629494973071[161] = 0;
   out_2308345629494973071[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_2308345629494973071[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_2308345629494973071[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_2308345629494973071[165] = 0;
   out_2308345629494973071[166] = 0;
   out_2308345629494973071[167] = 0;
   out_2308345629494973071[168] = 0;
   out_2308345629494973071[169] = 0;
   out_2308345629494973071[170] = 0;
   out_2308345629494973071[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_2308345629494973071[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_2308345629494973071[173] = 0;
   out_2308345629494973071[174] = 0;
   out_2308345629494973071[175] = 0;
   out_2308345629494973071[176] = 1;
   out_2308345629494973071[177] = 0;
   out_2308345629494973071[178] = 0;
   out_2308345629494973071[179] = 0;
   out_2308345629494973071[180] = 0;
   out_2308345629494973071[181] = 0;
   out_2308345629494973071[182] = 0;
   out_2308345629494973071[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_2308345629494973071[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_2308345629494973071[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_2308345629494973071[186] = 0;
   out_2308345629494973071[187] = 0;
   out_2308345629494973071[188] = 0;
   out_2308345629494973071[189] = 0;
   out_2308345629494973071[190] = 0;
   out_2308345629494973071[191] = 0;
   out_2308345629494973071[192] = 0;
   out_2308345629494973071[193] = 0;
   out_2308345629494973071[194] = 0;
   out_2308345629494973071[195] = 0;
   out_2308345629494973071[196] = 0;
   out_2308345629494973071[197] = 0;
   out_2308345629494973071[198] = 1;
   out_2308345629494973071[199] = 0;
   out_2308345629494973071[200] = 0;
   out_2308345629494973071[201] = 0;
   out_2308345629494973071[202] = 0;
   out_2308345629494973071[203] = 0;
   out_2308345629494973071[204] = 0;
   out_2308345629494973071[205] = 0;
   out_2308345629494973071[206] = 0;
   out_2308345629494973071[207] = 0;
   out_2308345629494973071[208] = 0;
   out_2308345629494973071[209] = 0;
   out_2308345629494973071[210] = 0;
   out_2308345629494973071[211] = 0;
   out_2308345629494973071[212] = 0;
   out_2308345629494973071[213] = 0;
   out_2308345629494973071[214] = 0;
   out_2308345629494973071[215] = 0;
   out_2308345629494973071[216] = 0;
   out_2308345629494973071[217] = 0;
   out_2308345629494973071[218] = 0;
   out_2308345629494973071[219] = 0;
   out_2308345629494973071[220] = 1;
   out_2308345629494973071[221] = 0;
   out_2308345629494973071[222] = 0;
   out_2308345629494973071[223] = 0;
   out_2308345629494973071[224] = 0;
   out_2308345629494973071[225] = 0;
   out_2308345629494973071[226] = 0;
   out_2308345629494973071[227] = 0;
   out_2308345629494973071[228] = 0;
   out_2308345629494973071[229] = 0;
   out_2308345629494973071[230] = 0;
   out_2308345629494973071[231] = 0;
   out_2308345629494973071[232] = 0;
   out_2308345629494973071[233] = 0;
   out_2308345629494973071[234] = 0;
   out_2308345629494973071[235] = 0;
   out_2308345629494973071[236] = 0;
   out_2308345629494973071[237] = 0;
   out_2308345629494973071[238] = 0;
   out_2308345629494973071[239] = 0;
   out_2308345629494973071[240] = 0;
   out_2308345629494973071[241] = 0;
   out_2308345629494973071[242] = 1;
   out_2308345629494973071[243] = 0;
   out_2308345629494973071[244] = 0;
   out_2308345629494973071[245] = 0;
   out_2308345629494973071[246] = 0;
   out_2308345629494973071[247] = 0;
   out_2308345629494973071[248] = 0;
   out_2308345629494973071[249] = 0;
   out_2308345629494973071[250] = 0;
   out_2308345629494973071[251] = 0;
   out_2308345629494973071[252] = 0;
   out_2308345629494973071[253] = 0;
   out_2308345629494973071[254] = 0;
   out_2308345629494973071[255] = 0;
   out_2308345629494973071[256] = 0;
   out_2308345629494973071[257] = 0;
   out_2308345629494973071[258] = 0;
   out_2308345629494973071[259] = 0;
   out_2308345629494973071[260] = 0;
   out_2308345629494973071[261] = 0;
   out_2308345629494973071[262] = 0;
   out_2308345629494973071[263] = 0;
   out_2308345629494973071[264] = 1;
   out_2308345629494973071[265] = 0;
   out_2308345629494973071[266] = 0;
   out_2308345629494973071[267] = 0;
   out_2308345629494973071[268] = 0;
   out_2308345629494973071[269] = 0;
   out_2308345629494973071[270] = 0;
   out_2308345629494973071[271] = 0;
   out_2308345629494973071[272] = 0;
   out_2308345629494973071[273] = 0;
   out_2308345629494973071[274] = 0;
   out_2308345629494973071[275] = 0;
   out_2308345629494973071[276] = 0;
   out_2308345629494973071[277] = 0;
   out_2308345629494973071[278] = 0;
   out_2308345629494973071[279] = 0;
   out_2308345629494973071[280] = 0;
   out_2308345629494973071[281] = 0;
   out_2308345629494973071[282] = 0;
   out_2308345629494973071[283] = 0;
   out_2308345629494973071[284] = 0;
   out_2308345629494973071[285] = 0;
   out_2308345629494973071[286] = 1;
   out_2308345629494973071[287] = 0;
   out_2308345629494973071[288] = 0;
   out_2308345629494973071[289] = 0;
   out_2308345629494973071[290] = 0;
   out_2308345629494973071[291] = 0;
   out_2308345629494973071[292] = 0;
   out_2308345629494973071[293] = 0;
   out_2308345629494973071[294] = 0;
   out_2308345629494973071[295] = 0;
   out_2308345629494973071[296] = 0;
   out_2308345629494973071[297] = 0;
   out_2308345629494973071[298] = 0;
   out_2308345629494973071[299] = 0;
   out_2308345629494973071[300] = 0;
   out_2308345629494973071[301] = 0;
   out_2308345629494973071[302] = 0;
   out_2308345629494973071[303] = 0;
   out_2308345629494973071[304] = 0;
   out_2308345629494973071[305] = 0;
   out_2308345629494973071[306] = 0;
   out_2308345629494973071[307] = 0;
   out_2308345629494973071[308] = 1;
   out_2308345629494973071[309] = 0;
   out_2308345629494973071[310] = 0;
   out_2308345629494973071[311] = 0;
   out_2308345629494973071[312] = 0;
   out_2308345629494973071[313] = 0;
   out_2308345629494973071[314] = 0;
   out_2308345629494973071[315] = 0;
   out_2308345629494973071[316] = 0;
   out_2308345629494973071[317] = 0;
   out_2308345629494973071[318] = 0;
   out_2308345629494973071[319] = 0;
   out_2308345629494973071[320] = 0;
   out_2308345629494973071[321] = 0;
   out_2308345629494973071[322] = 0;
   out_2308345629494973071[323] = 0;
   out_2308345629494973071[324] = 0;
   out_2308345629494973071[325] = 0;
   out_2308345629494973071[326] = 0;
   out_2308345629494973071[327] = 0;
   out_2308345629494973071[328] = 0;
   out_2308345629494973071[329] = 0;
   out_2308345629494973071[330] = 1;
   out_2308345629494973071[331] = 0;
   out_2308345629494973071[332] = 0;
   out_2308345629494973071[333] = 0;
   out_2308345629494973071[334] = 0;
   out_2308345629494973071[335] = 0;
   out_2308345629494973071[336] = 0;
   out_2308345629494973071[337] = 0;
   out_2308345629494973071[338] = 0;
   out_2308345629494973071[339] = 0;
   out_2308345629494973071[340] = 0;
   out_2308345629494973071[341] = 0;
   out_2308345629494973071[342] = 0;
   out_2308345629494973071[343] = 0;
   out_2308345629494973071[344] = 0;
   out_2308345629494973071[345] = 0;
   out_2308345629494973071[346] = 0;
   out_2308345629494973071[347] = 0;
   out_2308345629494973071[348] = 0;
   out_2308345629494973071[349] = 0;
   out_2308345629494973071[350] = 0;
   out_2308345629494973071[351] = 0;
   out_2308345629494973071[352] = 1;
   out_2308345629494973071[353] = 0;
   out_2308345629494973071[354] = 0;
   out_2308345629494973071[355] = 0;
   out_2308345629494973071[356] = 0;
   out_2308345629494973071[357] = 0;
   out_2308345629494973071[358] = 0;
   out_2308345629494973071[359] = 0;
   out_2308345629494973071[360] = 0;
   out_2308345629494973071[361] = 0;
   out_2308345629494973071[362] = 0;
   out_2308345629494973071[363] = 0;
   out_2308345629494973071[364] = 0;
   out_2308345629494973071[365] = 0;
   out_2308345629494973071[366] = 0;
   out_2308345629494973071[367] = 0;
   out_2308345629494973071[368] = 0;
   out_2308345629494973071[369] = 0;
   out_2308345629494973071[370] = 0;
   out_2308345629494973071[371] = 0;
   out_2308345629494973071[372] = 0;
   out_2308345629494973071[373] = 0;
   out_2308345629494973071[374] = 1;
   out_2308345629494973071[375] = 0;
   out_2308345629494973071[376] = 0;
   out_2308345629494973071[377] = 0;
   out_2308345629494973071[378] = 0;
   out_2308345629494973071[379] = 0;
   out_2308345629494973071[380] = 0;
   out_2308345629494973071[381] = 0;
   out_2308345629494973071[382] = 0;
   out_2308345629494973071[383] = 0;
   out_2308345629494973071[384] = 0;
   out_2308345629494973071[385] = 0;
   out_2308345629494973071[386] = 0;
   out_2308345629494973071[387] = 0;
   out_2308345629494973071[388] = 0;
   out_2308345629494973071[389] = 0;
   out_2308345629494973071[390] = 0;
   out_2308345629494973071[391] = 0;
   out_2308345629494973071[392] = 0;
   out_2308345629494973071[393] = 0;
   out_2308345629494973071[394] = 0;
   out_2308345629494973071[395] = 0;
   out_2308345629494973071[396] = 1;
   out_2308345629494973071[397] = 0;
   out_2308345629494973071[398] = 0;
   out_2308345629494973071[399] = 0;
   out_2308345629494973071[400] = 0;
   out_2308345629494973071[401] = 0;
   out_2308345629494973071[402] = 0;
   out_2308345629494973071[403] = 0;
   out_2308345629494973071[404] = 0;
   out_2308345629494973071[405] = 0;
   out_2308345629494973071[406] = 0;
   out_2308345629494973071[407] = 0;
   out_2308345629494973071[408] = 0;
   out_2308345629494973071[409] = 0;
   out_2308345629494973071[410] = 0;
   out_2308345629494973071[411] = 0;
   out_2308345629494973071[412] = 0;
   out_2308345629494973071[413] = 0;
   out_2308345629494973071[414] = 0;
   out_2308345629494973071[415] = 0;
   out_2308345629494973071[416] = 0;
   out_2308345629494973071[417] = 0;
   out_2308345629494973071[418] = 1;
   out_2308345629494973071[419] = 0;
   out_2308345629494973071[420] = 0;
   out_2308345629494973071[421] = 0;
   out_2308345629494973071[422] = 0;
   out_2308345629494973071[423] = 0;
   out_2308345629494973071[424] = 0;
   out_2308345629494973071[425] = 0;
   out_2308345629494973071[426] = 0;
   out_2308345629494973071[427] = 0;
   out_2308345629494973071[428] = 0;
   out_2308345629494973071[429] = 0;
   out_2308345629494973071[430] = 0;
   out_2308345629494973071[431] = 0;
   out_2308345629494973071[432] = 0;
   out_2308345629494973071[433] = 0;
   out_2308345629494973071[434] = 0;
   out_2308345629494973071[435] = 0;
   out_2308345629494973071[436] = 0;
   out_2308345629494973071[437] = 0;
   out_2308345629494973071[438] = 0;
   out_2308345629494973071[439] = 0;
   out_2308345629494973071[440] = 1;
}
void h_4(double *state, double *unused, double *out_1273194498352079153) {
   out_1273194498352079153[0] = state[10] + state[13];
   out_1273194498352079153[1] = state[11] + state[14];
   out_1273194498352079153[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_5044539697197672704) {
   out_5044539697197672704[0] = 0;
   out_5044539697197672704[1] = 0;
   out_5044539697197672704[2] = 0;
   out_5044539697197672704[3] = 0;
   out_5044539697197672704[4] = 0;
   out_5044539697197672704[5] = 0;
   out_5044539697197672704[6] = 0;
   out_5044539697197672704[7] = 0;
   out_5044539697197672704[8] = 0;
   out_5044539697197672704[9] = 0;
   out_5044539697197672704[10] = 1;
   out_5044539697197672704[11] = 0;
   out_5044539697197672704[12] = 0;
   out_5044539697197672704[13] = 1;
   out_5044539697197672704[14] = 0;
   out_5044539697197672704[15] = 0;
   out_5044539697197672704[16] = 0;
   out_5044539697197672704[17] = 0;
   out_5044539697197672704[18] = 0;
   out_5044539697197672704[19] = 0;
   out_5044539697197672704[20] = 0;
   out_5044539697197672704[21] = 0;
   out_5044539697197672704[22] = 0;
   out_5044539697197672704[23] = 0;
   out_5044539697197672704[24] = 0;
   out_5044539697197672704[25] = 0;
   out_5044539697197672704[26] = 0;
   out_5044539697197672704[27] = 0;
   out_5044539697197672704[28] = 0;
   out_5044539697197672704[29] = 0;
   out_5044539697197672704[30] = 0;
   out_5044539697197672704[31] = 0;
   out_5044539697197672704[32] = 0;
   out_5044539697197672704[33] = 1;
   out_5044539697197672704[34] = 0;
   out_5044539697197672704[35] = 0;
   out_5044539697197672704[36] = 1;
   out_5044539697197672704[37] = 0;
   out_5044539697197672704[38] = 0;
   out_5044539697197672704[39] = 0;
   out_5044539697197672704[40] = 0;
   out_5044539697197672704[41] = 0;
   out_5044539697197672704[42] = 0;
   out_5044539697197672704[43] = 0;
   out_5044539697197672704[44] = 0;
   out_5044539697197672704[45] = 0;
   out_5044539697197672704[46] = 0;
   out_5044539697197672704[47] = 0;
   out_5044539697197672704[48] = 0;
   out_5044539697197672704[49] = 0;
   out_5044539697197672704[50] = 0;
   out_5044539697197672704[51] = 0;
   out_5044539697197672704[52] = 0;
   out_5044539697197672704[53] = 0;
   out_5044539697197672704[54] = 0;
   out_5044539697197672704[55] = 0;
   out_5044539697197672704[56] = 1;
   out_5044539697197672704[57] = 0;
   out_5044539697197672704[58] = 0;
   out_5044539697197672704[59] = 1;
   out_5044539697197672704[60] = 0;
   out_5044539697197672704[61] = 0;
   out_5044539697197672704[62] = 0;
   out_5044539697197672704[63] = 0;
   out_5044539697197672704[64] = 0;
   out_5044539697197672704[65] = 0;
}
void h_9(double *state, double *unused, double *out_2204105631185551866) {
   out_2204105631185551866[0] = state[10];
   out_2204105631185551866[1] = state[11];
   out_2204105631185551866[2] = state[12];
}
void H_9(double *state, double *unused, double *out_4803350050568082059) {
   out_4803350050568082059[0] = 0;
   out_4803350050568082059[1] = 0;
   out_4803350050568082059[2] = 0;
   out_4803350050568082059[3] = 0;
   out_4803350050568082059[4] = 0;
   out_4803350050568082059[5] = 0;
   out_4803350050568082059[6] = 0;
   out_4803350050568082059[7] = 0;
   out_4803350050568082059[8] = 0;
   out_4803350050568082059[9] = 0;
   out_4803350050568082059[10] = 1;
   out_4803350050568082059[11] = 0;
   out_4803350050568082059[12] = 0;
   out_4803350050568082059[13] = 0;
   out_4803350050568082059[14] = 0;
   out_4803350050568082059[15] = 0;
   out_4803350050568082059[16] = 0;
   out_4803350050568082059[17] = 0;
   out_4803350050568082059[18] = 0;
   out_4803350050568082059[19] = 0;
   out_4803350050568082059[20] = 0;
   out_4803350050568082059[21] = 0;
   out_4803350050568082059[22] = 0;
   out_4803350050568082059[23] = 0;
   out_4803350050568082059[24] = 0;
   out_4803350050568082059[25] = 0;
   out_4803350050568082059[26] = 0;
   out_4803350050568082059[27] = 0;
   out_4803350050568082059[28] = 0;
   out_4803350050568082059[29] = 0;
   out_4803350050568082059[30] = 0;
   out_4803350050568082059[31] = 0;
   out_4803350050568082059[32] = 0;
   out_4803350050568082059[33] = 1;
   out_4803350050568082059[34] = 0;
   out_4803350050568082059[35] = 0;
   out_4803350050568082059[36] = 0;
   out_4803350050568082059[37] = 0;
   out_4803350050568082059[38] = 0;
   out_4803350050568082059[39] = 0;
   out_4803350050568082059[40] = 0;
   out_4803350050568082059[41] = 0;
   out_4803350050568082059[42] = 0;
   out_4803350050568082059[43] = 0;
   out_4803350050568082059[44] = 0;
   out_4803350050568082059[45] = 0;
   out_4803350050568082059[46] = 0;
   out_4803350050568082059[47] = 0;
   out_4803350050568082059[48] = 0;
   out_4803350050568082059[49] = 0;
   out_4803350050568082059[50] = 0;
   out_4803350050568082059[51] = 0;
   out_4803350050568082059[52] = 0;
   out_4803350050568082059[53] = 0;
   out_4803350050568082059[54] = 0;
   out_4803350050568082059[55] = 0;
   out_4803350050568082059[56] = 1;
   out_4803350050568082059[57] = 0;
   out_4803350050568082059[58] = 0;
   out_4803350050568082059[59] = 0;
   out_4803350050568082059[60] = 0;
   out_4803350050568082059[61] = 0;
   out_4803350050568082059[62] = 0;
   out_4803350050568082059[63] = 0;
   out_4803350050568082059[64] = 0;
   out_4803350050568082059[65] = 0;
}
void h_10(double *state, double *unused, double *out_7635301002432442638) {
   out_7635301002432442638[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_7635301002432442638[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_7635301002432442638[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_1213061047748453780) {
   out_1213061047748453780[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_1213061047748453780[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_1213061047748453780[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_1213061047748453780[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_1213061047748453780[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_1213061047748453780[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_1213061047748453780[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_1213061047748453780[7] = 0;
   out_1213061047748453780[8] = 0;
   out_1213061047748453780[9] = 0;
   out_1213061047748453780[10] = 0;
   out_1213061047748453780[11] = 0;
   out_1213061047748453780[12] = 0;
   out_1213061047748453780[13] = 0;
   out_1213061047748453780[14] = 0;
   out_1213061047748453780[15] = 0;
   out_1213061047748453780[16] = 1;
   out_1213061047748453780[17] = 0;
   out_1213061047748453780[18] = 0;
   out_1213061047748453780[19] = 1;
   out_1213061047748453780[20] = 0;
   out_1213061047748453780[21] = 0;
   out_1213061047748453780[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_1213061047748453780[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_1213061047748453780[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_1213061047748453780[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_1213061047748453780[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_1213061047748453780[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_1213061047748453780[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_1213061047748453780[29] = 0;
   out_1213061047748453780[30] = 0;
   out_1213061047748453780[31] = 0;
   out_1213061047748453780[32] = 0;
   out_1213061047748453780[33] = 0;
   out_1213061047748453780[34] = 0;
   out_1213061047748453780[35] = 0;
   out_1213061047748453780[36] = 0;
   out_1213061047748453780[37] = 0;
   out_1213061047748453780[38] = 0;
   out_1213061047748453780[39] = 1;
   out_1213061047748453780[40] = 0;
   out_1213061047748453780[41] = 0;
   out_1213061047748453780[42] = 1;
   out_1213061047748453780[43] = 0;
   out_1213061047748453780[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_1213061047748453780[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_1213061047748453780[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_1213061047748453780[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_1213061047748453780[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_1213061047748453780[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_1213061047748453780[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_1213061047748453780[51] = 0;
   out_1213061047748453780[52] = 0;
   out_1213061047748453780[53] = 0;
   out_1213061047748453780[54] = 0;
   out_1213061047748453780[55] = 0;
   out_1213061047748453780[56] = 0;
   out_1213061047748453780[57] = 0;
   out_1213061047748453780[58] = 0;
   out_1213061047748453780[59] = 0;
   out_1213061047748453780[60] = 0;
   out_1213061047748453780[61] = 0;
   out_1213061047748453780[62] = 1;
   out_1213061047748453780[63] = 0;
   out_1213061047748453780[64] = 0;
   out_1213061047748453780[65] = 1;
}
void h_12(double *state, double *unused, double *out_1818537461731555083) {
   out_1818537461731555083[0] = state[0];
   out_1818537461731555083[1] = state[1];
   out_1818537461731555083[2] = state[2];
}
void H_12(double *state, double *unused, double *out_25083289165710909) {
   out_25083289165710909[0] = 1;
   out_25083289165710909[1] = 0;
   out_25083289165710909[2] = 0;
   out_25083289165710909[3] = 0;
   out_25083289165710909[4] = 0;
   out_25083289165710909[5] = 0;
   out_25083289165710909[6] = 0;
   out_25083289165710909[7] = 0;
   out_25083289165710909[8] = 0;
   out_25083289165710909[9] = 0;
   out_25083289165710909[10] = 0;
   out_25083289165710909[11] = 0;
   out_25083289165710909[12] = 0;
   out_25083289165710909[13] = 0;
   out_25083289165710909[14] = 0;
   out_25083289165710909[15] = 0;
   out_25083289165710909[16] = 0;
   out_25083289165710909[17] = 0;
   out_25083289165710909[18] = 0;
   out_25083289165710909[19] = 0;
   out_25083289165710909[20] = 0;
   out_25083289165710909[21] = 0;
   out_25083289165710909[22] = 0;
   out_25083289165710909[23] = 1;
   out_25083289165710909[24] = 0;
   out_25083289165710909[25] = 0;
   out_25083289165710909[26] = 0;
   out_25083289165710909[27] = 0;
   out_25083289165710909[28] = 0;
   out_25083289165710909[29] = 0;
   out_25083289165710909[30] = 0;
   out_25083289165710909[31] = 0;
   out_25083289165710909[32] = 0;
   out_25083289165710909[33] = 0;
   out_25083289165710909[34] = 0;
   out_25083289165710909[35] = 0;
   out_25083289165710909[36] = 0;
   out_25083289165710909[37] = 0;
   out_25083289165710909[38] = 0;
   out_25083289165710909[39] = 0;
   out_25083289165710909[40] = 0;
   out_25083289165710909[41] = 0;
   out_25083289165710909[42] = 0;
   out_25083289165710909[43] = 0;
   out_25083289165710909[44] = 0;
   out_25083289165710909[45] = 0;
   out_25083289165710909[46] = 1;
   out_25083289165710909[47] = 0;
   out_25083289165710909[48] = 0;
   out_25083289165710909[49] = 0;
   out_25083289165710909[50] = 0;
   out_25083289165710909[51] = 0;
   out_25083289165710909[52] = 0;
   out_25083289165710909[53] = 0;
   out_25083289165710909[54] = 0;
   out_25083289165710909[55] = 0;
   out_25083289165710909[56] = 0;
   out_25083289165710909[57] = 0;
   out_25083289165710909[58] = 0;
   out_25083289165710909[59] = 0;
   out_25083289165710909[60] = 0;
   out_25083289165710909[61] = 0;
   out_25083289165710909[62] = 0;
   out_25083289165710909[63] = 0;
   out_25083289165710909[64] = 0;
   out_25083289165710909[65] = 0;
}
void h_35(double *state, double *unused, double *out_4500813549489714448) {
   out_4500813549489714448[0] = state[7];
   out_4500813549489714448[1] = state[8];
   out_4500813549489714448[2] = state[9];
}
void H_35(double *state, double *unused, double *out_1677877639825065328) {
   out_1677877639825065328[0] = 0;
   out_1677877639825065328[1] = 0;
   out_1677877639825065328[2] = 0;
   out_1677877639825065328[3] = 0;
   out_1677877639825065328[4] = 0;
   out_1677877639825065328[5] = 0;
   out_1677877639825065328[6] = 0;
   out_1677877639825065328[7] = 1;
   out_1677877639825065328[8] = 0;
   out_1677877639825065328[9] = 0;
   out_1677877639825065328[10] = 0;
   out_1677877639825065328[11] = 0;
   out_1677877639825065328[12] = 0;
   out_1677877639825065328[13] = 0;
   out_1677877639825065328[14] = 0;
   out_1677877639825065328[15] = 0;
   out_1677877639825065328[16] = 0;
   out_1677877639825065328[17] = 0;
   out_1677877639825065328[18] = 0;
   out_1677877639825065328[19] = 0;
   out_1677877639825065328[20] = 0;
   out_1677877639825065328[21] = 0;
   out_1677877639825065328[22] = 0;
   out_1677877639825065328[23] = 0;
   out_1677877639825065328[24] = 0;
   out_1677877639825065328[25] = 0;
   out_1677877639825065328[26] = 0;
   out_1677877639825065328[27] = 0;
   out_1677877639825065328[28] = 0;
   out_1677877639825065328[29] = 0;
   out_1677877639825065328[30] = 1;
   out_1677877639825065328[31] = 0;
   out_1677877639825065328[32] = 0;
   out_1677877639825065328[33] = 0;
   out_1677877639825065328[34] = 0;
   out_1677877639825065328[35] = 0;
   out_1677877639825065328[36] = 0;
   out_1677877639825065328[37] = 0;
   out_1677877639825065328[38] = 0;
   out_1677877639825065328[39] = 0;
   out_1677877639825065328[40] = 0;
   out_1677877639825065328[41] = 0;
   out_1677877639825065328[42] = 0;
   out_1677877639825065328[43] = 0;
   out_1677877639825065328[44] = 0;
   out_1677877639825065328[45] = 0;
   out_1677877639825065328[46] = 0;
   out_1677877639825065328[47] = 0;
   out_1677877639825065328[48] = 0;
   out_1677877639825065328[49] = 0;
   out_1677877639825065328[50] = 0;
   out_1677877639825065328[51] = 0;
   out_1677877639825065328[52] = 0;
   out_1677877639825065328[53] = 1;
   out_1677877639825065328[54] = 0;
   out_1677877639825065328[55] = 0;
   out_1677877639825065328[56] = 0;
   out_1677877639825065328[57] = 0;
   out_1677877639825065328[58] = 0;
   out_1677877639825065328[59] = 0;
   out_1677877639825065328[60] = 0;
   out_1677877639825065328[61] = 0;
   out_1677877639825065328[62] = 0;
   out_1677877639825065328[63] = 0;
   out_1677877639825065328[64] = 0;
   out_1677877639825065328[65] = 0;
}
void h_32(double *state, double *unused, double *out_1098957125053886739) {
   out_1098957125053886739[0] = state[3];
   out_1098957125053886739[1] = state[4];
   out_1098957125053886739[2] = state[5];
   out_1098957125053886739[3] = state[6];
}
void H_32(double *state, double *unused, double *out_2407858048271857772) {
   out_2407858048271857772[0] = 0;
   out_2407858048271857772[1] = 0;
   out_2407858048271857772[2] = 0;
   out_2407858048271857772[3] = 1;
   out_2407858048271857772[4] = 0;
   out_2407858048271857772[5] = 0;
   out_2407858048271857772[6] = 0;
   out_2407858048271857772[7] = 0;
   out_2407858048271857772[8] = 0;
   out_2407858048271857772[9] = 0;
   out_2407858048271857772[10] = 0;
   out_2407858048271857772[11] = 0;
   out_2407858048271857772[12] = 0;
   out_2407858048271857772[13] = 0;
   out_2407858048271857772[14] = 0;
   out_2407858048271857772[15] = 0;
   out_2407858048271857772[16] = 0;
   out_2407858048271857772[17] = 0;
   out_2407858048271857772[18] = 0;
   out_2407858048271857772[19] = 0;
   out_2407858048271857772[20] = 0;
   out_2407858048271857772[21] = 0;
   out_2407858048271857772[22] = 0;
   out_2407858048271857772[23] = 0;
   out_2407858048271857772[24] = 0;
   out_2407858048271857772[25] = 0;
   out_2407858048271857772[26] = 1;
   out_2407858048271857772[27] = 0;
   out_2407858048271857772[28] = 0;
   out_2407858048271857772[29] = 0;
   out_2407858048271857772[30] = 0;
   out_2407858048271857772[31] = 0;
   out_2407858048271857772[32] = 0;
   out_2407858048271857772[33] = 0;
   out_2407858048271857772[34] = 0;
   out_2407858048271857772[35] = 0;
   out_2407858048271857772[36] = 0;
   out_2407858048271857772[37] = 0;
   out_2407858048271857772[38] = 0;
   out_2407858048271857772[39] = 0;
   out_2407858048271857772[40] = 0;
   out_2407858048271857772[41] = 0;
   out_2407858048271857772[42] = 0;
   out_2407858048271857772[43] = 0;
   out_2407858048271857772[44] = 0;
   out_2407858048271857772[45] = 0;
   out_2407858048271857772[46] = 0;
   out_2407858048271857772[47] = 0;
   out_2407858048271857772[48] = 0;
   out_2407858048271857772[49] = 1;
   out_2407858048271857772[50] = 0;
   out_2407858048271857772[51] = 0;
   out_2407858048271857772[52] = 0;
   out_2407858048271857772[53] = 0;
   out_2407858048271857772[54] = 0;
   out_2407858048271857772[55] = 0;
   out_2407858048271857772[56] = 0;
   out_2407858048271857772[57] = 0;
   out_2407858048271857772[58] = 0;
   out_2407858048271857772[59] = 0;
   out_2407858048271857772[60] = 0;
   out_2407858048271857772[61] = 0;
   out_2407858048271857772[62] = 0;
   out_2407858048271857772[63] = 0;
   out_2407858048271857772[64] = 0;
   out_2407858048271857772[65] = 0;
   out_2407858048271857772[66] = 0;
   out_2407858048271857772[67] = 0;
   out_2407858048271857772[68] = 0;
   out_2407858048271857772[69] = 0;
   out_2407858048271857772[70] = 0;
   out_2407858048271857772[71] = 0;
   out_2407858048271857772[72] = 1;
   out_2407858048271857772[73] = 0;
   out_2407858048271857772[74] = 0;
   out_2407858048271857772[75] = 0;
   out_2407858048271857772[76] = 0;
   out_2407858048271857772[77] = 0;
   out_2407858048271857772[78] = 0;
   out_2407858048271857772[79] = 0;
   out_2407858048271857772[80] = 0;
   out_2407858048271857772[81] = 0;
   out_2407858048271857772[82] = 0;
   out_2407858048271857772[83] = 0;
   out_2407858048271857772[84] = 0;
   out_2407858048271857772[85] = 0;
   out_2407858048271857772[86] = 0;
   out_2407858048271857772[87] = 0;
}
void h_13(double *state, double *unused, double *out_3841394929060829831) {
   out_3841394929060829831[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_3841394929060829831[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_3841394929060829831[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_7526864419708909240) {
   out_7526864419708909240[0] = 0;
   out_7526864419708909240[1] = 0;
   out_7526864419708909240[2] = 0;
   out_7526864419708909240[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_7526864419708909240[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_7526864419708909240[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_7526864419708909240[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_7526864419708909240[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_7526864419708909240[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_7526864419708909240[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_7526864419708909240[10] = 0;
   out_7526864419708909240[11] = 0;
   out_7526864419708909240[12] = 0;
   out_7526864419708909240[13] = 0;
   out_7526864419708909240[14] = 0;
   out_7526864419708909240[15] = 0;
   out_7526864419708909240[16] = 0;
   out_7526864419708909240[17] = 0;
   out_7526864419708909240[18] = 0;
   out_7526864419708909240[19] = 0;
   out_7526864419708909240[20] = 0;
   out_7526864419708909240[21] = 0;
   out_7526864419708909240[22] = 0;
   out_7526864419708909240[23] = 0;
   out_7526864419708909240[24] = 0;
   out_7526864419708909240[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_7526864419708909240[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_7526864419708909240[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_7526864419708909240[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_7526864419708909240[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_7526864419708909240[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_7526864419708909240[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_7526864419708909240[32] = 0;
   out_7526864419708909240[33] = 0;
   out_7526864419708909240[34] = 0;
   out_7526864419708909240[35] = 0;
   out_7526864419708909240[36] = 0;
   out_7526864419708909240[37] = 0;
   out_7526864419708909240[38] = 0;
   out_7526864419708909240[39] = 0;
   out_7526864419708909240[40] = 0;
   out_7526864419708909240[41] = 0;
   out_7526864419708909240[42] = 0;
   out_7526864419708909240[43] = 0;
   out_7526864419708909240[44] = 0;
   out_7526864419708909240[45] = 0;
   out_7526864419708909240[46] = 0;
   out_7526864419708909240[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_7526864419708909240[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_7526864419708909240[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_7526864419708909240[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_7526864419708909240[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_7526864419708909240[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_7526864419708909240[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_7526864419708909240[54] = 0;
   out_7526864419708909240[55] = 0;
   out_7526864419708909240[56] = 0;
   out_7526864419708909240[57] = 0;
   out_7526864419708909240[58] = 0;
   out_7526864419708909240[59] = 0;
   out_7526864419708909240[60] = 0;
   out_7526864419708909240[61] = 0;
   out_7526864419708909240[62] = 0;
   out_7526864419708909240[63] = 0;
   out_7526864419708909240[64] = 0;
   out_7526864419708909240[65] = 0;
}
void h_14(double *state, double *unused, double *out_2204105631185551866) {
   out_2204105631185551866[0] = state[10];
   out_2204105631185551866[1] = state[11];
   out_2204105631185551866[2] = state[12];
}
void H_14(double *state, double *unused, double *out_4803350050568082059) {
   out_4803350050568082059[0] = 0;
   out_4803350050568082059[1] = 0;
   out_4803350050568082059[2] = 0;
   out_4803350050568082059[3] = 0;
   out_4803350050568082059[4] = 0;
   out_4803350050568082059[5] = 0;
   out_4803350050568082059[6] = 0;
   out_4803350050568082059[7] = 0;
   out_4803350050568082059[8] = 0;
   out_4803350050568082059[9] = 0;
   out_4803350050568082059[10] = 1;
   out_4803350050568082059[11] = 0;
   out_4803350050568082059[12] = 0;
   out_4803350050568082059[13] = 0;
   out_4803350050568082059[14] = 0;
   out_4803350050568082059[15] = 0;
   out_4803350050568082059[16] = 0;
   out_4803350050568082059[17] = 0;
   out_4803350050568082059[18] = 0;
   out_4803350050568082059[19] = 0;
   out_4803350050568082059[20] = 0;
   out_4803350050568082059[21] = 0;
   out_4803350050568082059[22] = 0;
   out_4803350050568082059[23] = 0;
   out_4803350050568082059[24] = 0;
   out_4803350050568082059[25] = 0;
   out_4803350050568082059[26] = 0;
   out_4803350050568082059[27] = 0;
   out_4803350050568082059[28] = 0;
   out_4803350050568082059[29] = 0;
   out_4803350050568082059[30] = 0;
   out_4803350050568082059[31] = 0;
   out_4803350050568082059[32] = 0;
   out_4803350050568082059[33] = 1;
   out_4803350050568082059[34] = 0;
   out_4803350050568082059[35] = 0;
   out_4803350050568082059[36] = 0;
   out_4803350050568082059[37] = 0;
   out_4803350050568082059[38] = 0;
   out_4803350050568082059[39] = 0;
   out_4803350050568082059[40] = 0;
   out_4803350050568082059[41] = 0;
   out_4803350050568082059[42] = 0;
   out_4803350050568082059[43] = 0;
   out_4803350050568082059[44] = 0;
   out_4803350050568082059[45] = 0;
   out_4803350050568082059[46] = 0;
   out_4803350050568082059[47] = 0;
   out_4803350050568082059[48] = 0;
   out_4803350050568082059[49] = 0;
   out_4803350050568082059[50] = 0;
   out_4803350050568082059[51] = 0;
   out_4803350050568082059[52] = 0;
   out_4803350050568082059[53] = 0;
   out_4803350050568082059[54] = 0;
   out_4803350050568082059[55] = 0;
   out_4803350050568082059[56] = 1;
   out_4803350050568082059[57] = 0;
   out_4803350050568082059[58] = 0;
   out_4803350050568082059[59] = 0;
   out_4803350050568082059[60] = 0;
   out_4803350050568082059[61] = 0;
   out_4803350050568082059[62] = 0;
   out_4803350050568082059[63] = 0;
   out_4803350050568082059[64] = 0;
   out_4803350050568082059[65] = 0;
}
void h_33(double *state, double *unused, double *out_7615682792382094432) {
   out_7615682792382094432[0] = state[16];
   out_7615682792382094432[1] = state[17];
   out_7615682792382094432[2] = state[18];
}
void H_33(double *state, double *unused, double *out_1472679364813792276) {
   out_1472679364813792276[0] = 0;
   out_1472679364813792276[1] = 0;
   out_1472679364813792276[2] = 0;
   out_1472679364813792276[3] = 0;
   out_1472679364813792276[4] = 0;
   out_1472679364813792276[5] = 0;
   out_1472679364813792276[6] = 0;
   out_1472679364813792276[7] = 0;
   out_1472679364813792276[8] = 0;
   out_1472679364813792276[9] = 0;
   out_1472679364813792276[10] = 0;
   out_1472679364813792276[11] = 0;
   out_1472679364813792276[12] = 0;
   out_1472679364813792276[13] = 0;
   out_1472679364813792276[14] = 0;
   out_1472679364813792276[15] = 0;
   out_1472679364813792276[16] = 1;
   out_1472679364813792276[17] = 0;
   out_1472679364813792276[18] = 0;
   out_1472679364813792276[19] = 0;
   out_1472679364813792276[20] = 0;
   out_1472679364813792276[21] = 0;
   out_1472679364813792276[22] = 0;
   out_1472679364813792276[23] = 0;
   out_1472679364813792276[24] = 0;
   out_1472679364813792276[25] = 0;
   out_1472679364813792276[26] = 0;
   out_1472679364813792276[27] = 0;
   out_1472679364813792276[28] = 0;
   out_1472679364813792276[29] = 0;
   out_1472679364813792276[30] = 0;
   out_1472679364813792276[31] = 0;
   out_1472679364813792276[32] = 0;
   out_1472679364813792276[33] = 0;
   out_1472679364813792276[34] = 0;
   out_1472679364813792276[35] = 0;
   out_1472679364813792276[36] = 0;
   out_1472679364813792276[37] = 0;
   out_1472679364813792276[38] = 0;
   out_1472679364813792276[39] = 1;
   out_1472679364813792276[40] = 0;
   out_1472679364813792276[41] = 0;
   out_1472679364813792276[42] = 0;
   out_1472679364813792276[43] = 0;
   out_1472679364813792276[44] = 0;
   out_1472679364813792276[45] = 0;
   out_1472679364813792276[46] = 0;
   out_1472679364813792276[47] = 0;
   out_1472679364813792276[48] = 0;
   out_1472679364813792276[49] = 0;
   out_1472679364813792276[50] = 0;
   out_1472679364813792276[51] = 0;
   out_1472679364813792276[52] = 0;
   out_1472679364813792276[53] = 0;
   out_1472679364813792276[54] = 0;
   out_1472679364813792276[55] = 0;
   out_1472679364813792276[56] = 0;
   out_1472679364813792276[57] = 0;
   out_1472679364813792276[58] = 0;
   out_1472679364813792276[59] = 0;
   out_1472679364813792276[60] = 0;
   out_1472679364813792276[61] = 0;
   out_1472679364813792276[62] = 1;
   out_1472679364813792276[63] = 0;
   out_1472679364813792276[64] = 0;
   out_1472679364813792276[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_2599424605208563416) {
  H(in_vec, out_2599424605208563416);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_5906482688677727015) {
  err_fun(nom_x, delta_x, out_5906482688677727015);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_4105895011660699419) {
  inv_err_fun(nom_x, true_x, out_4105895011660699419);
}
void live_H_mod_fun(double *state, double *out_2441862623175928931) {
  H_mod_fun(state, out_2441862623175928931);
}
void live_f_fun(double *state, double dt, double *out_983049846573028201) {
  f_fun(state,  dt, out_983049846573028201);
}
void live_F_fun(double *state, double dt, double *out_2308345629494973071) {
  F_fun(state,  dt, out_2308345629494973071);
}
void live_h_4(double *state, double *unused, double *out_1273194498352079153) {
  h_4(state, unused, out_1273194498352079153);
}
void live_H_4(double *state, double *unused, double *out_5044539697197672704) {
  H_4(state, unused, out_5044539697197672704);
}
void live_h_9(double *state, double *unused, double *out_2204105631185551866) {
  h_9(state, unused, out_2204105631185551866);
}
void live_H_9(double *state, double *unused, double *out_4803350050568082059) {
  H_9(state, unused, out_4803350050568082059);
}
void live_h_10(double *state, double *unused, double *out_7635301002432442638) {
  h_10(state, unused, out_7635301002432442638);
}
void live_H_10(double *state, double *unused, double *out_1213061047748453780) {
  H_10(state, unused, out_1213061047748453780);
}
void live_h_12(double *state, double *unused, double *out_1818537461731555083) {
  h_12(state, unused, out_1818537461731555083);
}
void live_H_12(double *state, double *unused, double *out_25083289165710909) {
  H_12(state, unused, out_25083289165710909);
}
void live_h_35(double *state, double *unused, double *out_4500813549489714448) {
  h_35(state, unused, out_4500813549489714448);
}
void live_H_35(double *state, double *unused, double *out_1677877639825065328) {
  H_35(state, unused, out_1677877639825065328);
}
void live_h_32(double *state, double *unused, double *out_1098957125053886739) {
  h_32(state, unused, out_1098957125053886739);
}
void live_H_32(double *state, double *unused, double *out_2407858048271857772) {
  H_32(state, unused, out_2407858048271857772);
}
void live_h_13(double *state, double *unused, double *out_3841394929060829831) {
  h_13(state, unused, out_3841394929060829831);
}
void live_H_13(double *state, double *unused, double *out_7526864419708909240) {
  H_13(state, unused, out_7526864419708909240);
}
void live_h_14(double *state, double *unused, double *out_2204105631185551866) {
  h_14(state, unused, out_2204105631185551866);
}
void live_H_14(double *state, double *unused, double *out_4803350050568082059) {
  H_14(state, unused, out_4803350050568082059);
}
void live_h_33(double *state, double *unused, double *out_7615682792382094432) {
  h_33(state, unused, out_7615682792382094432);
}
void live_H_33(double *state, double *unused, double *out_1472679364813792276) {
  H_33(state, unused, out_1472679364813792276);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_init(live);
