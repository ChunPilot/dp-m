#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                      Code generated with SymPy 1.11.1                      *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_6327026773264915096) {
   out_6327026773264915096[0] = 0;
   out_6327026773264915096[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_6327026773264915096[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_6327026773264915096[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_6327026773264915096[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_6327026773264915096[5] = -sin(in_vec[1]);
   out_6327026773264915096[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_6327026773264915096[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_6327026773264915096[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_6327026773264915096[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_6327026773264915096[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_6327026773264915096[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_6327026773264915096[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_6327026773264915096[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_6327026773264915096[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_6327026773264915096[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_6327026773264915096[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_6327026773264915096[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_8067863775592439168) {
   out_8067863775592439168[0] = delta_x[0] + nom_x[0];
   out_8067863775592439168[1] = delta_x[1] + nom_x[1];
   out_8067863775592439168[2] = delta_x[2] + nom_x[2];
   out_8067863775592439168[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_8067863775592439168[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_8067863775592439168[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_8067863775592439168[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_8067863775592439168[7] = delta_x[6] + nom_x[7];
   out_8067863775592439168[8] = delta_x[7] + nom_x[8];
   out_8067863775592439168[9] = delta_x[8] + nom_x[9];
   out_8067863775592439168[10] = delta_x[9] + nom_x[10];
   out_8067863775592439168[11] = delta_x[10] + nom_x[11];
   out_8067863775592439168[12] = delta_x[11] + nom_x[12];
   out_8067863775592439168[13] = delta_x[12] + nom_x[13];
   out_8067863775592439168[14] = delta_x[13] + nom_x[14];
   out_8067863775592439168[15] = delta_x[14] + nom_x[15];
   out_8067863775592439168[16] = delta_x[15] + nom_x[16];
   out_8067863775592439168[17] = delta_x[16] + nom_x[17];
   out_8067863775592439168[18] = delta_x[17] + nom_x[18];
   out_8067863775592439168[19] = delta_x[18] + nom_x[19];
   out_8067863775592439168[20] = delta_x[19] + nom_x[20];
   out_8067863775592439168[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_357558411111015608) {
   out_357558411111015608[0] = -nom_x[0] + true_x[0];
   out_357558411111015608[1] = -nom_x[1] + true_x[1];
   out_357558411111015608[2] = -nom_x[2] + true_x[2];
   out_357558411111015608[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_357558411111015608[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_357558411111015608[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_357558411111015608[6] = -nom_x[7] + true_x[7];
   out_357558411111015608[7] = -nom_x[8] + true_x[8];
   out_357558411111015608[8] = -nom_x[9] + true_x[9];
   out_357558411111015608[9] = -nom_x[10] + true_x[10];
   out_357558411111015608[10] = -nom_x[11] + true_x[11];
   out_357558411111015608[11] = -nom_x[12] + true_x[12];
   out_357558411111015608[12] = -nom_x[13] + true_x[13];
   out_357558411111015608[13] = -nom_x[14] + true_x[14];
   out_357558411111015608[14] = -nom_x[15] + true_x[15];
   out_357558411111015608[15] = -nom_x[16] + true_x[16];
   out_357558411111015608[16] = -nom_x[17] + true_x[17];
   out_357558411111015608[17] = -nom_x[18] + true_x[18];
   out_357558411111015608[18] = -nom_x[19] + true_x[19];
   out_357558411111015608[19] = -nom_x[20] + true_x[20];
   out_357558411111015608[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_5377985231292781310) {
   out_5377985231292781310[0] = 1.0;
   out_5377985231292781310[1] = 0;
   out_5377985231292781310[2] = 0;
   out_5377985231292781310[3] = 0;
   out_5377985231292781310[4] = 0;
   out_5377985231292781310[5] = 0;
   out_5377985231292781310[6] = 0;
   out_5377985231292781310[7] = 0;
   out_5377985231292781310[8] = 0;
   out_5377985231292781310[9] = 0;
   out_5377985231292781310[10] = 0;
   out_5377985231292781310[11] = 0;
   out_5377985231292781310[12] = 0;
   out_5377985231292781310[13] = 0;
   out_5377985231292781310[14] = 0;
   out_5377985231292781310[15] = 0;
   out_5377985231292781310[16] = 0;
   out_5377985231292781310[17] = 0;
   out_5377985231292781310[18] = 0;
   out_5377985231292781310[19] = 0;
   out_5377985231292781310[20] = 0;
   out_5377985231292781310[21] = 0;
   out_5377985231292781310[22] = 1.0;
   out_5377985231292781310[23] = 0;
   out_5377985231292781310[24] = 0;
   out_5377985231292781310[25] = 0;
   out_5377985231292781310[26] = 0;
   out_5377985231292781310[27] = 0;
   out_5377985231292781310[28] = 0;
   out_5377985231292781310[29] = 0;
   out_5377985231292781310[30] = 0;
   out_5377985231292781310[31] = 0;
   out_5377985231292781310[32] = 0;
   out_5377985231292781310[33] = 0;
   out_5377985231292781310[34] = 0;
   out_5377985231292781310[35] = 0;
   out_5377985231292781310[36] = 0;
   out_5377985231292781310[37] = 0;
   out_5377985231292781310[38] = 0;
   out_5377985231292781310[39] = 0;
   out_5377985231292781310[40] = 0;
   out_5377985231292781310[41] = 0;
   out_5377985231292781310[42] = 0;
   out_5377985231292781310[43] = 0;
   out_5377985231292781310[44] = 1.0;
   out_5377985231292781310[45] = 0;
   out_5377985231292781310[46] = 0;
   out_5377985231292781310[47] = 0;
   out_5377985231292781310[48] = 0;
   out_5377985231292781310[49] = 0;
   out_5377985231292781310[50] = 0;
   out_5377985231292781310[51] = 0;
   out_5377985231292781310[52] = 0;
   out_5377985231292781310[53] = 0;
   out_5377985231292781310[54] = 0;
   out_5377985231292781310[55] = 0;
   out_5377985231292781310[56] = 0;
   out_5377985231292781310[57] = 0;
   out_5377985231292781310[58] = 0;
   out_5377985231292781310[59] = 0;
   out_5377985231292781310[60] = 0;
   out_5377985231292781310[61] = 0;
   out_5377985231292781310[62] = 0;
   out_5377985231292781310[63] = 0;
   out_5377985231292781310[64] = 0;
   out_5377985231292781310[65] = 0;
   out_5377985231292781310[66] = -0.5*state[4];
   out_5377985231292781310[67] = -0.5*state[5];
   out_5377985231292781310[68] = -0.5*state[6];
   out_5377985231292781310[69] = 0;
   out_5377985231292781310[70] = 0;
   out_5377985231292781310[71] = 0;
   out_5377985231292781310[72] = 0;
   out_5377985231292781310[73] = 0;
   out_5377985231292781310[74] = 0;
   out_5377985231292781310[75] = 0;
   out_5377985231292781310[76] = 0;
   out_5377985231292781310[77] = 0;
   out_5377985231292781310[78] = 0;
   out_5377985231292781310[79] = 0;
   out_5377985231292781310[80] = 0;
   out_5377985231292781310[81] = 0;
   out_5377985231292781310[82] = 0;
   out_5377985231292781310[83] = 0;
   out_5377985231292781310[84] = 0;
   out_5377985231292781310[85] = 0;
   out_5377985231292781310[86] = 0;
   out_5377985231292781310[87] = 0.5*state[3];
   out_5377985231292781310[88] = 0.5*state[6];
   out_5377985231292781310[89] = -0.5*state[5];
   out_5377985231292781310[90] = 0;
   out_5377985231292781310[91] = 0;
   out_5377985231292781310[92] = 0;
   out_5377985231292781310[93] = 0;
   out_5377985231292781310[94] = 0;
   out_5377985231292781310[95] = 0;
   out_5377985231292781310[96] = 0;
   out_5377985231292781310[97] = 0;
   out_5377985231292781310[98] = 0;
   out_5377985231292781310[99] = 0;
   out_5377985231292781310[100] = 0;
   out_5377985231292781310[101] = 0;
   out_5377985231292781310[102] = 0;
   out_5377985231292781310[103] = 0;
   out_5377985231292781310[104] = 0;
   out_5377985231292781310[105] = 0;
   out_5377985231292781310[106] = 0;
   out_5377985231292781310[107] = 0;
   out_5377985231292781310[108] = -0.5*state[6];
   out_5377985231292781310[109] = 0.5*state[3];
   out_5377985231292781310[110] = 0.5*state[4];
   out_5377985231292781310[111] = 0;
   out_5377985231292781310[112] = 0;
   out_5377985231292781310[113] = 0;
   out_5377985231292781310[114] = 0;
   out_5377985231292781310[115] = 0;
   out_5377985231292781310[116] = 0;
   out_5377985231292781310[117] = 0;
   out_5377985231292781310[118] = 0;
   out_5377985231292781310[119] = 0;
   out_5377985231292781310[120] = 0;
   out_5377985231292781310[121] = 0;
   out_5377985231292781310[122] = 0;
   out_5377985231292781310[123] = 0;
   out_5377985231292781310[124] = 0;
   out_5377985231292781310[125] = 0;
   out_5377985231292781310[126] = 0;
   out_5377985231292781310[127] = 0;
   out_5377985231292781310[128] = 0;
   out_5377985231292781310[129] = 0.5*state[5];
   out_5377985231292781310[130] = -0.5*state[4];
   out_5377985231292781310[131] = 0.5*state[3];
   out_5377985231292781310[132] = 0;
   out_5377985231292781310[133] = 0;
   out_5377985231292781310[134] = 0;
   out_5377985231292781310[135] = 0;
   out_5377985231292781310[136] = 0;
   out_5377985231292781310[137] = 0;
   out_5377985231292781310[138] = 0;
   out_5377985231292781310[139] = 0;
   out_5377985231292781310[140] = 0;
   out_5377985231292781310[141] = 0;
   out_5377985231292781310[142] = 0;
   out_5377985231292781310[143] = 0;
   out_5377985231292781310[144] = 0;
   out_5377985231292781310[145] = 0;
   out_5377985231292781310[146] = 0;
   out_5377985231292781310[147] = 0;
   out_5377985231292781310[148] = 0;
   out_5377985231292781310[149] = 0;
   out_5377985231292781310[150] = 0;
   out_5377985231292781310[151] = 0;
   out_5377985231292781310[152] = 0;
   out_5377985231292781310[153] = 1.0;
   out_5377985231292781310[154] = 0;
   out_5377985231292781310[155] = 0;
   out_5377985231292781310[156] = 0;
   out_5377985231292781310[157] = 0;
   out_5377985231292781310[158] = 0;
   out_5377985231292781310[159] = 0;
   out_5377985231292781310[160] = 0;
   out_5377985231292781310[161] = 0;
   out_5377985231292781310[162] = 0;
   out_5377985231292781310[163] = 0;
   out_5377985231292781310[164] = 0;
   out_5377985231292781310[165] = 0;
   out_5377985231292781310[166] = 0;
   out_5377985231292781310[167] = 0;
   out_5377985231292781310[168] = 0;
   out_5377985231292781310[169] = 0;
   out_5377985231292781310[170] = 0;
   out_5377985231292781310[171] = 0;
   out_5377985231292781310[172] = 0;
   out_5377985231292781310[173] = 0;
   out_5377985231292781310[174] = 0;
   out_5377985231292781310[175] = 1.0;
   out_5377985231292781310[176] = 0;
   out_5377985231292781310[177] = 0;
   out_5377985231292781310[178] = 0;
   out_5377985231292781310[179] = 0;
   out_5377985231292781310[180] = 0;
   out_5377985231292781310[181] = 0;
   out_5377985231292781310[182] = 0;
   out_5377985231292781310[183] = 0;
   out_5377985231292781310[184] = 0;
   out_5377985231292781310[185] = 0;
   out_5377985231292781310[186] = 0;
   out_5377985231292781310[187] = 0;
   out_5377985231292781310[188] = 0;
   out_5377985231292781310[189] = 0;
   out_5377985231292781310[190] = 0;
   out_5377985231292781310[191] = 0;
   out_5377985231292781310[192] = 0;
   out_5377985231292781310[193] = 0;
   out_5377985231292781310[194] = 0;
   out_5377985231292781310[195] = 0;
   out_5377985231292781310[196] = 0;
   out_5377985231292781310[197] = 1.0;
   out_5377985231292781310[198] = 0;
   out_5377985231292781310[199] = 0;
   out_5377985231292781310[200] = 0;
   out_5377985231292781310[201] = 0;
   out_5377985231292781310[202] = 0;
   out_5377985231292781310[203] = 0;
   out_5377985231292781310[204] = 0;
   out_5377985231292781310[205] = 0;
   out_5377985231292781310[206] = 0;
   out_5377985231292781310[207] = 0;
   out_5377985231292781310[208] = 0;
   out_5377985231292781310[209] = 0;
   out_5377985231292781310[210] = 0;
   out_5377985231292781310[211] = 0;
   out_5377985231292781310[212] = 0;
   out_5377985231292781310[213] = 0;
   out_5377985231292781310[214] = 0;
   out_5377985231292781310[215] = 0;
   out_5377985231292781310[216] = 0;
   out_5377985231292781310[217] = 0;
   out_5377985231292781310[218] = 0;
   out_5377985231292781310[219] = 1.0;
   out_5377985231292781310[220] = 0;
   out_5377985231292781310[221] = 0;
   out_5377985231292781310[222] = 0;
   out_5377985231292781310[223] = 0;
   out_5377985231292781310[224] = 0;
   out_5377985231292781310[225] = 0;
   out_5377985231292781310[226] = 0;
   out_5377985231292781310[227] = 0;
   out_5377985231292781310[228] = 0;
   out_5377985231292781310[229] = 0;
   out_5377985231292781310[230] = 0;
   out_5377985231292781310[231] = 0;
   out_5377985231292781310[232] = 0;
   out_5377985231292781310[233] = 0;
   out_5377985231292781310[234] = 0;
   out_5377985231292781310[235] = 0;
   out_5377985231292781310[236] = 0;
   out_5377985231292781310[237] = 0;
   out_5377985231292781310[238] = 0;
   out_5377985231292781310[239] = 0;
   out_5377985231292781310[240] = 0;
   out_5377985231292781310[241] = 1.0;
   out_5377985231292781310[242] = 0;
   out_5377985231292781310[243] = 0;
   out_5377985231292781310[244] = 0;
   out_5377985231292781310[245] = 0;
   out_5377985231292781310[246] = 0;
   out_5377985231292781310[247] = 0;
   out_5377985231292781310[248] = 0;
   out_5377985231292781310[249] = 0;
   out_5377985231292781310[250] = 0;
   out_5377985231292781310[251] = 0;
   out_5377985231292781310[252] = 0;
   out_5377985231292781310[253] = 0;
   out_5377985231292781310[254] = 0;
   out_5377985231292781310[255] = 0;
   out_5377985231292781310[256] = 0;
   out_5377985231292781310[257] = 0;
   out_5377985231292781310[258] = 0;
   out_5377985231292781310[259] = 0;
   out_5377985231292781310[260] = 0;
   out_5377985231292781310[261] = 0;
   out_5377985231292781310[262] = 0;
   out_5377985231292781310[263] = 1.0;
   out_5377985231292781310[264] = 0;
   out_5377985231292781310[265] = 0;
   out_5377985231292781310[266] = 0;
   out_5377985231292781310[267] = 0;
   out_5377985231292781310[268] = 0;
   out_5377985231292781310[269] = 0;
   out_5377985231292781310[270] = 0;
   out_5377985231292781310[271] = 0;
   out_5377985231292781310[272] = 0;
   out_5377985231292781310[273] = 0;
   out_5377985231292781310[274] = 0;
   out_5377985231292781310[275] = 0;
   out_5377985231292781310[276] = 0;
   out_5377985231292781310[277] = 0;
   out_5377985231292781310[278] = 0;
   out_5377985231292781310[279] = 0;
   out_5377985231292781310[280] = 0;
   out_5377985231292781310[281] = 0;
   out_5377985231292781310[282] = 0;
   out_5377985231292781310[283] = 0;
   out_5377985231292781310[284] = 0;
   out_5377985231292781310[285] = 1.0;
   out_5377985231292781310[286] = 0;
   out_5377985231292781310[287] = 0;
   out_5377985231292781310[288] = 0;
   out_5377985231292781310[289] = 0;
   out_5377985231292781310[290] = 0;
   out_5377985231292781310[291] = 0;
   out_5377985231292781310[292] = 0;
   out_5377985231292781310[293] = 0;
   out_5377985231292781310[294] = 0;
   out_5377985231292781310[295] = 0;
   out_5377985231292781310[296] = 0;
   out_5377985231292781310[297] = 0;
   out_5377985231292781310[298] = 0;
   out_5377985231292781310[299] = 0;
   out_5377985231292781310[300] = 0;
   out_5377985231292781310[301] = 0;
   out_5377985231292781310[302] = 0;
   out_5377985231292781310[303] = 0;
   out_5377985231292781310[304] = 0;
   out_5377985231292781310[305] = 0;
   out_5377985231292781310[306] = 0;
   out_5377985231292781310[307] = 1.0;
   out_5377985231292781310[308] = 0;
   out_5377985231292781310[309] = 0;
   out_5377985231292781310[310] = 0;
   out_5377985231292781310[311] = 0;
   out_5377985231292781310[312] = 0;
   out_5377985231292781310[313] = 0;
   out_5377985231292781310[314] = 0;
   out_5377985231292781310[315] = 0;
   out_5377985231292781310[316] = 0;
   out_5377985231292781310[317] = 0;
   out_5377985231292781310[318] = 0;
   out_5377985231292781310[319] = 0;
   out_5377985231292781310[320] = 0;
   out_5377985231292781310[321] = 0;
   out_5377985231292781310[322] = 0;
   out_5377985231292781310[323] = 0;
   out_5377985231292781310[324] = 0;
   out_5377985231292781310[325] = 0;
   out_5377985231292781310[326] = 0;
   out_5377985231292781310[327] = 0;
   out_5377985231292781310[328] = 0;
   out_5377985231292781310[329] = 1.0;
   out_5377985231292781310[330] = 0;
   out_5377985231292781310[331] = 0;
   out_5377985231292781310[332] = 0;
   out_5377985231292781310[333] = 0;
   out_5377985231292781310[334] = 0;
   out_5377985231292781310[335] = 0;
   out_5377985231292781310[336] = 0;
   out_5377985231292781310[337] = 0;
   out_5377985231292781310[338] = 0;
   out_5377985231292781310[339] = 0;
   out_5377985231292781310[340] = 0;
   out_5377985231292781310[341] = 0;
   out_5377985231292781310[342] = 0;
   out_5377985231292781310[343] = 0;
   out_5377985231292781310[344] = 0;
   out_5377985231292781310[345] = 0;
   out_5377985231292781310[346] = 0;
   out_5377985231292781310[347] = 0;
   out_5377985231292781310[348] = 0;
   out_5377985231292781310[349] = 0;
   out_5377985231292781310[350] = 0;
   out_5377985231292781310[351] = 1.0;
   out_5377985231292781310[352] = 0;
   out_5377985231292781310[353] = 0;
   out_5377985231292781310[354] = 0;
   out_5377985231292781310[355] = 0;
   out_5377985231292781310[356] = 0;
   out_5377985231292781310[357] = 0;
   out_5377985231292781310[358] = 0;
   out_5377985231292781310[359] = 0;
   out_5377985231292781310[360] = 0;
   out_5377985231292781310[361] = 0;
   out_5377985231292781310[362] = 0;
   out_5377985231292781310[363] = 0;
   out_5377985231292781310[364] = 0;
   out_5377985231292781310[365] = 0;
   out_5377985231292781310[366] = 0;
   out_5377985231292781310[367] = 0;
   out_5377985231292781310[368] = 0;
   out_5377985231292781310[369] = 0;
   out_5377985231292781310[370] = 0;
   out_5377985231292781310[371] = 0;
   out_5377985231292781310[372] = 0;
   out_5377985231292781310[373] = 1.0;
   out_5377985231292781310[374] = 0;
   out_5377985231292781310[375] = 0;
   out_5377985231292781310[376] = 0;
   out_5377985231292781310[377] = 0;
   out_5377985231292781310[378] = 0;
   out_5377985231292781310[379] = 0;
   out_5377985231292781310[380] = 0;
   out_5377985231292781310[381] = 0;
   out_5377985231292781310[382] = 0;
   out_5377985231292781310[383] = 0;
   out_5377985231292781310[384] = 0;
   out_5377985231292781310[385] = 0;
   out_5377985231292781310[386] = 0;
   out_5377985231292781310[387] = 0;
   out_5377985231292781310[388] = 0;
   out_5377985231292781310[389] = 0;
   out_5377985231292781310[390] = 0;
   out_5377985231292781310[391] = 0;
   out_5377985231292781310[392] = 0;
   out_5377985231292781310[393] = 0;
   out_5377985231292781310[394] = 0;
   out_5377985231292781310[395] = 1.0;
   out_5377985231292781310[396] = 0;
   out_5377985231292781310[397] = 0;
   out_5377985231292781310[398] = 0;
   out_5377985231292781310[399] = 0;
   out_5377985231292781310[400] = 0;
   out_5377985231292781310[401] = 0;
   out_5377985231292781310[402] = 0;
   out_5377985231292781310[403] = 0;
   out_5377985231292781310[404] = 0;
   out_5377985231292781310[405] = 0;
   out_5377985231292781310[406] = 0;
   out_5377985231292781310[407] = 0;
   out_5377985231292781310[408] = 0;
   out_5377985231292781310[409] = 0;
   out_5377985231292781310[410] = 0;
   out_5377985231292781310[411] = 0;
   out_5377985231292781310[412] = 0;
   out_5377985231292781310[413] = 0;
   out_5377985231292781310[414] = 0;
   out_5377985231292781310[415] = 0;
   out_5377985231292781310[416] = 0;
   out_5377985231292781310[417] = 1.0;
   out_5377985231292781310[418] = 0;
   out_5377985231292781310[419] = 0;
   out_5377985231292781310[420] = 0;
   out_5377985231292781310[421] = 0;
   out_5377985231292781310[422] = 0;
   out_5377985231292781310[423] = 0;
   out_5377985231292781310[424] = 0;
   out_5377985231292781310[425] = 0;
   out_5377985231292781310[426] = 0;
   out_5377985231292781310[427] = 0;
   out_5377985231292781310[428] = 0;
   out_5377985231292781310[429] = 0;
   out_5377985231292781310[430] = 0;
   out_5377985231292781310[431] = 0;
   out_5377985231292781310[432] = 0;
   out_5377985231292781310[433] = 0;
   out_5377985231292781310[434] = 0;
   out_5377985231292781310[435] = 0;
   out_5377985231292781310[436] = 0;
   out_5377985231292781310[437] = 0;
   out_5377985231292781310[438] = 0;
   out_5377985231292781310[439] = 1.0;
   out_5377985231292781310[440] = 0;
   out_5377985231292781310[441] = 0;
   out_5377985231292781310[442] = 0;
   out_5377985231292781310[443] = 0;
   out_5377985231292781310[444] = 0;
   out_5377985231292781310[445] = 0;
   out_5377985231292781310[446] = 0;
   out_5377985231292781310[447] = 0;
   out_5377985231292781310[448] = 0;
   out_5377985231292781310[449] = 0;
   out_5377985231292781310[450] = 0;
   out_5377985231292781310[451] = 0;
   out_5377985231292781310[452] = 0;
   out_5377985231292781310[453] = 0;
   out_5377985231292781310[454] = 0;
   out_5377985231292781310[455] = 0;
   out_5377985231292781310[456] = 0;
   out_5377985231292781310[457] = 0;
   out_5377985231292781310[458] = 0;
   out_5377985231292781310[459] = 0;
   out_5377985231292781310[460] = 0;
   out_5377985231292781310[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_5336262391330574405) {
   out_5336262391330574405[0] = dt*state[7] + state[0];
   out_5336262391330574405[1] = dt*state[8] + state[1];
   out_5336262391330574405[2] = dt*state[9] + state[2];
   out_5336262391330574405[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_5336262391330574405[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_5336262391330574405[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_5336262391330574405[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_5336262391330574405[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_5336262391330574405[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_5336262391330574405[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_5336262391330574405[10] = state[10];
   out_5336262391330574405[11] = state[11];
   out_5336262391330574405[12] = state[12];
   out_5336262391330574405[13] = state[13];
   out_5336262391330574405[14] = state[14];
   out_5336262391330574405[15] = state[15];
   out_5336262391330574405[16] = state[16];
   out_5336262391330574405[17] = state[17];
   out_5336262391330574405[18] = state[18];
   out_5336262391330574405[19] = state[19];
   out_5336262391330574405[20] = state[20];
   out_5336262391330574405[21] = state[21];
}
void F_fun(double *state, double dt, double *out_5727986461689315061) {
   out_5727986461689315061[0] = 1;
   out_5727986461689315061[1] = 0;
   out_5727986461689315061[2] = 0;
   out_5727986461689315061[3] = 0;
   out_5727986461689315061[4] = 0;
   out_5727986461689315061[5] = 0;
   out_5727986461689315061[6] = dt;
   out_5727986461689315061[7] = 0;
   out_5727986461689315061[8] = 0;
   out_5727986461689315061[9] = 0;
   out_5727986461689315061[10] = 0;
   out_5727986461689315061[11] = 0;
   out_5727986461689315061[12] = 0;
   out_5727986461689315061[13] = 0;
   out_5727986461689315061[14] = 0;
   out_5727986461689315061[15] = 0;
   out_5727986461689315061[16] = 0;
   out_5727986461689315061[17] = 0;
   out_5727986461689315061[18] = 0;
   out_5727986461689315061[19] = 0;
   out_5727986461689315061[20] = 0;
   out_5727986461689315061[21] = 0;
   out_5727986461689315061[22] = 1;
   out_5727986461689315061[23] = 0;
   out_5727986461689315061[24] = 0;
   out_5727986461689315061[25] = 0;
   out_5727986461689315061[26] = 0;
   out_5727986461689315061[27] = 0;
   out_5727986461689315061[28] = dt;
   out_5727986461689315061[29] = 0;
   out_5727986461689315061[30] = 0;
   out_5727986461689315061[31] = 0;
   out_5727986461689315061[32] = 0;
   out_5727986461689315061[33] = 0;
   out_5727986461689315061[34] = 0;
   out_5727986461689315061[35] = 0;
   out_5727986461689315061[36] = 0;
   out_5727986461689315061[37] = 0;
   out_5727986461689315061[38] = 0;
   out_5727986461689315061[39] = 0;
   out_5727986461689315061[40] = 0;
   out_5727986461689315061[41] = 0;
   out_5727986461689315061[42] = 0;
   out_5727986461689315061[43] = 0;
   out_5727986461689315061[44] = 1;
   out_5727986461689315061[45] = 0;
   out_5727986461689315061[46] = 0;
   out_5727986461689315061[47] = 0;
   out_5727986461689315061[48] = 0;
   out_5727986461689315061[49] = 0;
   out_5727986461689315061[50] = dt;
   out_5727986461689315061[51] = 0;
   out_5727986461689315061[52] = 0;
   out_5727986461689315061[53] = 0;
   out_5727986461689315061[54] = 0;
   out_5727986461689315061[55] = 0;
   out_5727986461689315061[56] = 0;
   out_5727986461689315061[57] = 0;
   out_5727986461689315061[58] = 0;
   out_5727986461689315061[59] = 0;
   out_5727986461689315061[60] = 0;
   out_5727986461689315061[61] = 0;
   out_5727986461689315061[62] = 0;
   out_5727986461689315061[63] = 0;
   out_5727986461689315061[64] = 0;
   out_5727986461689315061[65] = 0;
   out_5727986461689315061[66] = 1;
   out_5727986461689315061[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_5727986461689315061[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_5727986461689315061[69] = 0;
   out_5727986461689315061[70] = 0;
   out_5727986461689315061[71] = 0;
   out_5727986461689315061[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_5727986461689315061[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_5727986461689315061[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_5727986461689315061[75] = 0;
   out_5727986461689315061[76] = 0;
   out_5727986461689315061[77] = 0;
   out_5727986461689315061[78] = 0;
   out_5727986461689315061[79] = 0;
   out_5727986461689315061[80] = 0;
   out_5727986461689315061[81] = 0;
   out_5727986461689315061[82] = 0;
   out_5727986461689315061[83] = 0;
   out_5727986461689315061[84] = 0;
   out_5727986461689315061[85] = 0;
   out_5727986461689315061[86] = 0;
   out_5727986461689315061[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_5727986461689315061[88] = 1;
   out_5727986461689315061[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_5727986461689315061[90] = 0;
   out_5727986461689315061[91] = 0;
   out_5727986461689315061[92] = 0;
   out_5727986461689315061[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_5727986461689315061[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_5727986461689315061[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_5727986461689315061[96] = 0;
   out_5727986461689315061[97] = 0;
   out_5727986461689315061[98] = 0;
   out_5727986461689315061[99] = 0;
   out_5727986461689315061[100] = 0;
   out_5727986461689315061[101] = 0;
   out_5727986461689315061[102] = 0;
   out_5727986461689315061[103] = 0;
   out_5727986461689315061[104] = 0;
   out_5727986461689315061[105] = 0;
   out_5727986461689315061[106] = 0;
   out_5727986461689315061[107] = 0;
   out_5727986461689315061[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_5727986461689315061[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_5727986461689315061[110] = 1;
   out_5727986461689315061[111] = 0;
   out_5727986461689315061[112] = 0;
   out_5727986461689315061[113] = 0;
   out_5727986461689315061[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_5727986461689315061[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_5727986461689315061[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_5727986461689315061[117] = 0;
   out_5727986461689315061[118] = 0;
   out_5727986461689315061[119] = 0;
   out_5727986461689315061[120] = 0;
   out_5727986461689315061[121] = 0;
   out_5727986461689315061[122] = 0;
   out_5727986461689315061[123] = 0;
   out_5727986461689315061[124] = 0;
   out_5727986461689315061[125] = 0;
   out_5727986461689315061[126] = 0;
   out_5727986461689315061[127] = 0;
   out_5727986461689315061[128] = 0;
   out_5727986461689315061[129] = 0;
   out_5727986461689315061[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_5727986461689315061[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_5727986461689315061[132] = 1;
   out_5727986461689315061[133] = 0;
   out_5727986461689315061[134] = 0;
   out_5727986461689315061[135] = 0;
   out_5727986461689315061[136] = 0;
   out_5727986461689315061[137] = 0;
   out_5727986461689315061[138] = 0;
   out_5727986461689315061[139] = 0;
   out_5727986461689315061[140] = 0;
   out_5727986461689315061[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_5727986461689315061[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_5727986461689315061[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_5727986461689315061[144] = 0;
   out_5727986461689315061[145] = 0;
   out_5727986461689315061[146] = 0;
   out_5727986461689315061[147] = 0;
   out_5727986461689315061[148] = 0;
   out_5727986461689315061[149] = 0;
   out_5727986461689315061[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_5727986461689315061[151] = 0;
   out_5727986461689315061[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_5727986461689315061[153] = 0;
   out_5727986461689315061[154] = 1;
   out_5727986461689315061[155] = 0;
   out_5727986461689315061[156] = 0;
   out_5727986461689315061[157] = 0;
   out_5727986461689315061[158] = 0;
   out_5727986461689315061[159] = 0;
   out_5727986461689315061[160] = 0;
   out_5727986461689315061[161] = 0;
   out_5727986461689315061[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_5727986461689315061[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_5727986461689315061[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_5727986461689315061[165] = 0;
   out_5727986461689315061[166] = 0;
   out_5727986461689315061[167] = 0;
   out_5727986461689315061[168] = 0;
   out_5727986461689315061[169] = 0;
   out_5727986461689315061[170] = 0;
   out_5727986461689315061[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_5727986461689315061[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_5727986461689315061[173] = 0;
   out_5727986461689315061[174] = 0;
   out_5727986461689315061[175] = 0;
   out_5727986461689315061[176] = 1;
   out_5727986461689315061[177] = 0;
   out_5727986461689315061[178] = 0;
   out_5727986461689315061[179] = 0;
   out_5727986461689315061[180] = 0;
   out_5727986461689315061[181] = 0;
   out_5727986461689315061[182] = 0;
   out_5727986461689315061[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_5727986461689315061[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_5727986461689315061[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_5727986461689315061[186] = 0;
   out_5727986461689315061[187] = 0;
   out_5727986461689315061[188] = 0;
   out_5727986461689315061[189] = 0;
   out_5727986461689315061[190] = 0;
   out_5727986461689315061[191] = 0;
   out_5727986461689315061[192] = 0;
   out_5727986461689315061[193] = 0;
   out_5727986461689315061[194] = 0;
   out_5727986461689315061[195] = 0;
   out_5727986461689315061[196] = 0;
   out_5727986461689315061[197] = 0;
   out_5727986461689315061[198] = 1;
   out_5727986461689315061[199] = 0;
   out_5727986461689315061[200] = 0;
   out_5727986461689315061[201] = 0;
   out_5727986461689315061[202] = 0;
   out_5727986461689315061[203] = 0;
   out_5727986461689315061[204] = 0;
   out_5727986461689315061[205] = 0;
   out_5727986461689315061[206] = 0;
   out_5727986461689315061[207] = 0;
   out_5727986461689315061[208] = 0;
   out_5727986461689315061[209] = 0;
   out_5727986461689315061[210] = 0;
   out_5727986461689315061[211] = 0;
   out_5727986461689315061[212] = 0;
   out_5727986461689315061[213] = 0;
   out_5727986461689315061[214] = 0;
   out_5727986461689315061[215] = 0;
   out_5727986461689315061[216] = 0;
   out_5727986461689315061[217] = 0;
   out_5727986461689315061[218] = 0;
   out_5727986461689315061[219] = 0;
   out_5727986461689315061[220] = 1;
   out_5727986461689315061[221] = 0;
   out_5727986461689315061[222] = 0;
   out_5727986461689315061[223] = 0;
   out_5727986461689315061[224] = 0;
   out_5727986461689315061[225] = 0;
   out_5727986461689315061[226] = 0;
   out_5727986461689315061[227] = 0;
   out_5727986461689315061[228] = 0;
   out_5727986461689315061[229] = 0;
   out_5727986461689315061[230] = 0;
   out_5727986461689315061[231] = 0;
   out_5727986461689315061[232] = 0;
   out_5727986461689315061[233] = 0;
   out_5727986461689315061[234] = 0;
   out_5727986461689315061[235] = 0;
   out_5727986461689315061[236] = 0;
   out_5727986461689315061[237] = 0;
   out_5727986461689315061[238] = 0;
   out_5727986461689315061[239] = 0;
   out_5727986461689315061[240] = 0;
   out_5727986461689315061[241] = 0;
   out_5727986461689315061[242] = 1;
   out_5727986461689315061[243] = 0;
   out_5727986461689315061[244] = 0;
   out_5727986461689315061[245] = 0;
   out_5727986461689315061[246] = 0;
   out_5727986461689315061[247] = 0;
   out_5727986461689315061[248] = 0;
   out_5727986461689315061[249] = 0;
   out_5727986461689315061[250] = 0;
   out_5727986461689315061[251] = 0;
   out_5727986461689315061[252] = 0;
   out_5727986461689315061[253] = 0;
   out_5727986461689315061[254] = 0;
   out_5727986461689315061[255] = 0;
   out_5727986461689315061[256] = 0;
   out_5727986461689315061[257] = 0;
   out_5727986461689315061[258] = 0;
   out_5727986461689315061[259] = 0;
   out_5727986461689315061[260] = 0;
   out_5727986461689315061[261] = 0;
   out_5727986461689315061[262] = 0;
   out_5727986461689315061[263] = 0;
   out_5727986461689315061[264] = 1;
   out_5727986461689315061[265] = 0;
   out_5727986461689315061[266] = 0;
   out_5727986461689315061[267] = 0;
   out_5727986461689315061[268] = 0;
   out_5727986461689315061[269] = 0;
   out_5727986461689315061[270] = 0;
   out_5727986461689315061[271] = 0;
   out_5727986461689315061[272] = 0;
   out_5727986461689315061[273] = 0;
   out_5727986461689315061[274] = 0;
   out_5727986461689315061[275] = 0;
   out_5727986461689315061[276] = 0;
   out_5727986461689315061[277] = 0;
   out_5727986461689315061[278] = 0;
   out_5727986461689315061[279] = 0;
   out_5727986461689315061[280] = 0;
   out_5727986461689315061[281] = 0;
   out_5727986461689315061[282] = 0;
   out_5727986461689315061[283] = 0;
   out_5727986461689315061[284] = 0;
   out_5727986461689315061[285] = 0;
   out_5727986461689315061[286] = 1;
   out_5727986461689315061[287] = 0;
   out_5727986461689315061[288] = 0;
   out_5727986461689315061[289] = 0;
   out_5727986461689315061[290] = 0;
   out_5727986461689315061[291] = 0;
   out_5727986461689315061[292] = 0;
   out_5727986461689315061[293] = 0;
   out_5727986461689315061[294] = 0;
   out_5727986461689315061[295] = 0;
   out_5727986461689315061[296] = 0;
   out_5727986461689315061[297] = 0;
   out_5727986461689315061[298] = 0;
   out_5727986461689315061[299] = 0;
   out_5727986461689315061[300] = 0;
   out_5727986461689315061[301] = 0;
   out_5727986461689315061[302] = 0;
   out_5727986461689315061[303] = 0;
   out_5727986461689315061[304] = 0;
   out_5727986461689315061[305] = 0;
   out_5727986461689315061[306] = 0;
   out_5727986461689315061[307] = 0;
   out_5727986461689315061[308] = 1;
   out_5727986461689315061[309] = 0;
   out_5727986461689315061[310] = 0;
   out_5727986461689315061[311] = 0;
   out_5727986461689315061[312] = 0;
   out_5727986461689315061[313] = 0;
   out_5727986461689315061[314] = 0;
   out_5727986461689315061[315] = 0;
   out_5727986461689315061[316] = 0;
   out_5727986461689315061[317] = 0;
   out_5727986461689315061[318] = 0;
   out_5727986461689315061[319] = 0;
   out_5727986461689315061[320] = 0;
   out_5727986461689315061[321] = 0;
   out_5727986461689315061[322] = 0;
   out_5727986461689315061[323] = 0;
   out_5727986461689315061[324] = 0;
   out_5727986461689315061[325] = 0;
   out_5727986461689315061[326] = 0;
   out_5727986461689315061[327] = 0;
   out_5727986461689315061[328] = 0;
   out_5727986461689315061[329] = 0;
   out_5727986461689315061[330] = 1;
   out_5727986461689315061[331] = 0;
   out_5727986461689315061[332] = 0;
   out_5727986461689315061[333] = 0;
   out_5727986461689315061[334] = 0;
   out_5727986461689315061[335] = 0;
   out_5727986461689315061[336] = 0;
   out_5727986461689315061[337] = 0;
   out_5727986461689315061[338] = 0;
   out_5727986461689315061[339] = 0;
   out_5727986461689315061[340] = 0;
   out_5727986461689315061[341] = 0;
   out_5727986461689315061[342] = 0;
   out_5727986461689315061[343] = 0;
   out_5727986461689315061[344] = 0;
   out_5727986461689315061[345] = 0;
   out_5727986461689315061[346] = 0;
   out_5727986461689315061[347] = 0;
   out_5727986461689315061[348] = 0;
   out_5727986461689315061[349] = 0;
   out_5727986461689315061[350] = 0;
   out_5727986461689315061[351] = 0;
   out_5727986461689315061[352] = 1;
   out_5727986461689315061[353] = 0;
   out_5727986461689315061[354] = 0;
   out_5727986461689315061[355] = 0;
   out_5727986461689315061[356] = 0;
   out_5727986461689315061[357] = 0;
   out_5727986461689315061[358] = 0;
   out_5727986461689315061[359] = 0;
   out_5727986461689315061[360] = 0;
   out_5727986461689315061[361] = 0;
   out_5727986461689315061[362] = 0;
   out_5727986461689315061[363] = 0;
   out_5727986461689315061[364] = 0;
   out_5727986461689315061[365] = 0;
   out_5727986461689315061[366] = 0;
   out_5727986461689315061[367] = 0;
   out_5727986461689315061[368] = 0;
   out_5727986461689315061[369] = 0;
   out_5727986461689315061[370] = 0;
   out_5727986461689315061[371] = 0;
   out_5727986461689315061[372] = 0;
   out_5727986461689315061[373] = 0;
   out_5727986461689315061[374] = 1;
   out_5727986461689315061[375] = 0;
   out_5727986461689315061[376] = 0;
   out_5727986461689315061[377] = 0;
   out_5727986461689315061[378] = 0;
   out_5727986461689315061[379] = 0;
   out_5727986461689315061[380] = 0;
   out_5727986461689315061[381] = 0;
   out_5727986461689315061[382] = 0;
   out_5727986461689315061[383] = 0;
   out_5727986461689315061[384] = 0;
   out_5727986461689315061[385] = 0;
   out_5727986461689315061[386] = 0;
   out_5727986461689315061[387] = 0;
   out_5727986461689315061[388] = 0;
   out_5727986461689315061[389] = 0;
   out_5727986461689315061[390] = 0;
   out_5727986461689315061[391] = 0;
   out_5727986461689315061[392] = 0;
   out_5727986461689315061[393] = 0;
   out_5727986461689315061[394] = 0;
   out_5727986461689315061[395] = 0;
   out_5727986461689315061[396] = 1;
   out_5727986461689315061[397] = 0;
   out_5727986461689315061[398] = 0;
   out_5727986461689315061[399] = 0;
   out_5727986461689315061[400] = 0;
   out_5727986461689315061[401] = 0;
   out_5727986461689315061[402] = 0;
   out_5727986461689315061[403] = 0;
   out_5727986461689315061[404] = 0;
   out_5727986461689315061[405] = 0;
   out_5727986461689315061[406] = 0;
   out_5727986461689315061[407] = 0;
   out_5727986461689315061[408] = 0;
   out_5727986461689315061[409] = 0;
   out_5727986461689315061[410] = 0;
   out_5727986461689315061[411] = 0;
   out_5727986461689315061[412] = 0;
   out_5727986461689315061[413] = 0;
   out_5727986461689315061[414] = 0;
   out_5727986461689315061[415] = 0;
   out_5727986461689315061[416] = 0;
   out_5727986461689315061[417] = 0;
   out_5727986461689315061[418] = 1;
   out_5727986461689315061[419] = 0;
   out_5727986461689315061[420] = 0;
   out_5727986461689315061[421] = 0;
   out_5727986461689315061[422] = 0;
   out_5727986461689315061[423] = 0;
   out_5727986461689315061[424] = 0;
   out_5727986461689315061[425] = 0;
   out_5727986461689315061[426] = 0;
   out_5727986461689315061[427] = 0;
   out_5727986461689315061[428] = 0;
   out_5727986461689315061[429] = 0;
   out_5727986461689315061[430] = 0;
   out_5727986461689315061[431] = 0;
   out_5727986461689315061[432] = 0;
   out_5727986461689315061[433] = 0;
   out_5727986461689315061[434] = 0;
   out_5727986461689315061[435] = 0;
   out_5727986461689315061[436] = 0;
   out_5727986461689315061[437] = 0;
   out_5727986461689315061[438] = 0;
   out_5727986461689315061[439] = 0;
   out_5727986461689315061[440] = 1;
}
void h_4(double *state, double *unused, double *out_7307035997982969824) {
   out_7307035997982969824[0] = state[10] + state[13];
   out_7307035997982969824[1] = state[11] + state[14];
   out_7307035997982969824[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_6677252187169356223) {
   out_6677252187169356223[0] = 0;
   out_6677252187169356223[1] = 0;
   out_6677252187169356223[2] = 0;
   out_6677252187169356223[3] = 0;
   out_6677252187169356223[4] = 0;
   out_6677252187169356223[5] = 0;
   out_6677252187169356223[6] = 0;
   out_6677252187169356223[7] = 0;
   out_6677252187169356223[8] = 0;
   out_6677252187169356223[9] = 0;
   out_6677252187169356223[10] = 1;
   out_6677252187169356223[11] = 0;
   out_6677252187169356223[12] = 0;
   out_6677252187169356223[13] = 1;
   out_6677252187169356223[14] = 0;
   out_6677252187169356223[15] = 0;
   out_6677252187169356223[16] = 0;
   out_6677252187169356223[17] = 0;
   out_6677252187169356223[18] = 0;
   out_6677252187169356223[19] = 0;
   out_6677252187169356223[20] = 0;
   out_6677252187169356223[21] = 0;
   out_6677252187169356223[22] = 0;
   out_6677252187169356223[23] = 0;
   out_6677252187169356223[24] = 0;
   out_6677252187169356223[25] = 0;
   out_6677252187169356223[26] = 0;
   out_6677252187169356223[27] = 0;
   out_6677252187169356223[28] = 0;
   out_6677252187169356223[29] = 0;
   out_6677252187169356223[30] = 0;
   out_6677252187169356223[31] = 0;
   out_6677252187169356223[32] = 0;
   out_6677252187169356223[33] = 1;
   out_6677252187169356223[34] = 0;
   out_6677252187169356223[35] = 0;
   out_6677252187169356223[36] = 1;
   out_6677252187169356223[37] = 0;
   out_6677252187169356223[38] = 0;
   out_6677252187169356223[39] = 0;
   out_6677252187169356223[40] = 0;
   out_6677252187169356223[41] = 0;
   out_6677252187169356223[42] = 0;
   out_6677252187169356223[43] = 0;
   out_6677252187169356223[44] = 0;
   out_6677252187169356223[45] = 0;
   out_6677252187169356223[46] = 0;
   out_6677252187169356223[47] = 0;
   out_6677252187169356223[48] = 0;
   out_6677252187169356223[49] = 0;
   out_6677252187169356223[50] = 0;
   out_6677252187169356223[51] = 0;
   out_6677252187169356223[52] = 0;
   out_6677252187169356223[53] = 0;
   out_6677252187169356223[54] = 0;
   out_6677252187169356223[55] = 0;
   out_6677252187169356223[56] = 1;
   out_6677252187169356223[57] = 0;
   out_6677252187169356223[58] = 0;
   out_6677252187169356223[59] = 1;
   out_6677252187169356223[60] = 0;
   out_6677252187169356223[61] = 0;
   out_6677252187169356223[62] = 0;
   out_6677252187169356223[63] = 0;
   out_6677252187169356223[64] = 0;
   out_6677252187169356223[65] = 0;
}
void h_9(double *state, double *unused, double *out_7482255631790547869) {
   out_7482255631790547869[0] = state[10];
   out_7482255631790547869[1] = state[11];
   out_7482255631790547869[2] = state[12];
}
void H_9(double *state, double *unused, double *out_6918441833798946868) {
   out_6918441833798946868[0] = 0;
   out_6918441833798946868[1] = 0;
   out_6918441833798946868[2] = 0;
   out_6918441833798946868[3] = 0;
   out_6918441833798946868[4] = 0;
   out_6918441833798946868[5] = 0;
   out_6918441833798946868[6] = 0;
   out_6918441833798946868[7] = 0;
   out_6918441833798946868[8] = 0;
   out_6918441833798946868[9] = 0;
   out_6918441833798946868[10] = 1;
   out_6918441833798946868[11] = 0;
   out_6918441833798946868[12] = 0;
   out_6918441833798946868[13] = 0;
   out_6918441833798946868[14] = 0;
   out_6918441833798946868[15] = 0;
   out_6918441833798946868[16] = 0;
   out_6918441833798946868[17] = 0;
   out_6918441833798946868[18] = 0;
   out_6918441833798946868[19] = 0;
   out_6918441833798946868[20] = 0;
   out_6918441833798946868[21] = 0;
   out_6918441833798946868[22] = 0;
   out_6918441833798946868[23] = 0;
   out_6918441833798946868[24] = 0;
   out_6918441833798946868[25] = 0;
   out_6918441833798946868[26] = 0;
   out_6918441833798946868[27] = 0;
   out_6918441833798946868[28] = 0;
   out_6918441833798946868[29] = 0;
   out_6918441833798946868[30] = 0;
   out_6918441833798946868[31] = 0;
   out_6918441833798946868[32] = 0;
   out_6918441833798946868[33] = 1;
   out_6918441833798946868[34] = 0;
   out_6918441833798946868[35] = 0;
   out_6918441833798946868[36] = 0;
   out_6918441833798946868[37] = 0;
   out_6918441833798946868[38] = 0;
   out_6918441833798946868[39] = 0;
   out_6918441833798946868[40] = 0;
   out_6918441833798946868[41] = 0;
   out_6918441833798946868[42] = 0;
   out_6918441833798946868[43] = 0;
   out_6918441833798946868[44] = 0;
   out_6918441833798946868[45] = 0;
   out_6918441833798946868[46] = 0;
   out_6918441833798946868[47] = 0;
   out_6918441833798946868[48] = 0;
   out_6918441833798946868[49] = 0;
   out_6918441833798946868[50] = 0;
   out_6918441833798946868[51] = 0;
   out_6918441833798946868[52] = 0;
   out_6918441833798946868[53] = 0;
   out_6918441833798946868[54] = 0;
   out_6918441833798946868[55] = 0;
   out_6918441833798946868[56] = 1;
   out_6918441833798946868[57] = 0;
   out_6918441833798946868[58] = 0;
   out_6918441833798946868[59] = 0;
   out_6918441833798946868[60] = 0;
   out_6918441833798946868[61] = 0;
   out_6918441833798946868[62] = 0;
   out_6918441833798946868[63] = 0;
   out_6918441833798946868[64] = 0;
   out_6918441833798946868[65] = 0;
}
void h_10(double *state, double *unused, double *out_1748597886089026286) {
   out_1748597886089026286[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_1748597886089026286[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_1748597886089026286[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_7519167040950150340) {
   out_7519167040950150340[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_7519167040950150340[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_7519167040950150340[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_7519167040950150340[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_7519167040950150340[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_7519167040950150340[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_7519167040950150340[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_7519167040950150340[7] = 0;
   out_7519167040950150340[8] = 0;
   out_7519167040950150340[9] = 0;
   out_7519167040950150340[10] = 0;
   out_7519167040950150340[11] = 0;
   out_7519167040950150340[12] = 0;
   out_7519167040950150340[13] = 0;
   out_7519167040950150340[14] = 0;
   out_7519167040950150340[15] = 0;
   out_7519167040950150340[16] = 1;
   out_7519167040950150340[17] = 0;
   out_7519167040950150340[18] = 0;
   out_7519167040950150340[19] = 1;
   out_7519167040950150340[20] = 0;
   out_7519167040950150340[21] = 0;
   out_7519167040950150340[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_7519167040950150340[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_7519167040950150340[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_7519167040950150340[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_7519167040950150340[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_7519167040950150340[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_7519167040950150340[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_7519167040950150340[29] = 0;
   out_7519167040950150340[30] = 0;
   out_7519167040950150340[31] = 0;
   out_7519167040950150340[32] = 0;
   out_7519167040950150340[33] = 0;
   out_7519167040950150340[34] = 0;
   out_7519167040950150340[35] = 0;
   out_7519167040950150340[36] = 0;
   out_7519167040950150340[37] = 0;
   out_7519167040950150340[38] = 0;
   out_7519167040950150340[39] = 1;
   out_7519167040950150340[40] = 0;
   out_7519167040950150340[41] = 0;
   out_7519167040950150340[42] = 1;
   out_7519167040950150340[43] = 0;
   out_7519167040950150340[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_7519167040950150340[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_7519167040950150340[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_7519167040950150340[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_7519167040950150340[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_7519167040950150340[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_7519167040950150340[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_7519167040950150340[51] = 0;
   out_7519167040950150340[52] = 0;
   out_7519167040950150340[53] = 0;
   out_7519167040950150340[54] = 0;
   out_7519167040950150340[55] = 0;
   out_7519167040950150340[56] = 0;
   out_7519167040950150340[57] = 0;
   out_7519167040950150340[58] = 0;
   out_7519167040950150340[59] = 0;
   out_7519167040950150340[60] = 0;
   out_7519167040950150340[61] = 0;
   out_7519167040950150340[62] = 1;
   out_7519167040950150340[63] = 0;
   out_7519167040950150340[64] = 0;
   out_7519167040950150340[65] = 1;
}
void h_12(double *state, double *unused, double *out_1491269639460264899) {
   out_1491269639460264899[0] = state[0];
   out_1491269639460264899[1] = state[1];
   out_1491269639460264899[2] = state[2];
}
void H_12(double *state, double *unused, double *out_6750035478508233598) {
   out_6750035478508233598[0] = 1;
   out_6750035478508233598[1] = 0;
   out_6750035478508233598[2] = 0;
   out_6750035478508233598[3] = 0;
   out_6750035478508233598[4] = 0;
   out_6750035478508233598[5] = 0;
   out_6750035478508233598[6] = 0;
   out_6750035478508233598[7] = 0;
   out_6750035478508233598[8] = 0;
   out_6750035478508233598[9] = 0;
   out_6750035478508233598[10] = 0;
   out_6750035478508233598[11] = 0;
   out_6750035478508233598[12] = 0;
   out_6750035478508233598[13] = 0;
   out_6750035478508233598[14] = 0;
   out_6750035478508233598[15] = 0;
   out_6750035478508233598[16] = 0;
   out_6750035478508233598[17] = 0;
   out_6750035478508233598[18] = 0;
   out_6750035478508233598[19] = 0;
   out_6750035478508233598[20] = 0;
   out_6750035478508233598[21] = 0;
   out_6750035478508233598[22] = 0;
   out_6750035478508233598[23] = 1;
   out_6750035478508233598[24] = 0;
   out_6750035478508233598[25] = 0;
   out_6750035478508233598[26] = 0;
   out_6750035478508233598[27] = 0;
   out_6750035478508233598[28] = 0;
   out_6750035478508233598[29] = 0;
   out_6750035478508233598[30] = 0;
   out_6750035478508233598[31] = 0;
   out_6750035478508233598[32] = 0;
   out_6750035478508233598[33] = 0;
   out_6750035478508233598[34] = 0;
   out_6750035478508233598[35] = 0;
   out_6750035478508233598[36] = 0;
   out_6750035478508233598[37] = 0;
   out_6750035478508233598[38] = 0;
   out_6750035478508233598[39] = 0;
   out_6750035478508233598[40] = 0;
   out_6750035478508233598[41] = 0;
   out_6750035478508233598[42] = 0;
   out_6750035478508233598[43] = 0;
   out_6750035478508233598[44] = 0;
   out_6750035478508233598[45] = 0;
   out_6750035478508233598[46] = 1;
   out_6750035478508233598[47] = 0;
   out_6750035478508233598[48] = 0;
   out_6750035478508233598[49] = 0;
   out_6750035478508233598[50] = 0;
   out_6750035478508233598[51] = 0;
   out_6750035478508233598[52] = 0;
   out_6750035478508233598[53] = 0;
   out_6750035478508233598[54] = 0;
   out_6750035478508233598[55] = 0;
   out_6750035478508233598[56] = 0;
   out_6750035478508233598[57] = 0;
   out_6750035478508233598[58] = 0;
   out_6750035478508233598[59] = 0;
   out_6750035478508233598[60] = 0;
   out_6750035478508233598[61] = 0;
   out_6750035478508233598[62] = 0;
   out_6750035478508233598[63] = 0;
   out_6750035478508233598[64] = 0;
   out_6750035478508233598[65] = 0;
}
void h_35(double *state, double *unused, double *out_8419097311840231893) {
   out_8419097311840231893[0] = state[7];
   out_8419097311840231893[1] = state[8];
   out_8419097311840231893[2] = state[9];
}
void H_35(double *state, double *unused, double *out_4004472446183219889) {
   out_4004472446183219889[0] = 0;
   out_4004472446183219889[1] = 0;
   out_4004472446183219889[2] = 0;
   out_4004472446183219889[3] = 0;
   out_4004472446183219889[4] = 0;
   out_4004472446183219889[5] = 0;
   out_4004472446183219889[6] = 0;
   out_4004472446183219889[7] = 1;
   out_4004472446183219889[8] = 0;
   out_4004472446183219889[9] = 0;
   out_4004472446183219889[10] = 0;
   out_4004472446183219889[11] = 0;
   out_4004472446183219889[12] = 0;
   out_4004472446183219889[13] = 0;
   out_4004472446183219889[14] = 0;
   out_4004472446183219889[15] = 0;
   out_4004472446183219889[16] = 0;
   out_4004472446183219889[17] = 0;
   out_4004472446183219889[18] = 0;
   out_4004472446183219889[19] = 0;
   out_4004472446183219889[20] = 0;
   out_4004472446183219889[21] = 0;
   out_4004472446183219889[22] = 0;
   out_4004472446183219889[23] = 0;
   out_4004472446183219889[24] = 0;
   out_4004472446183219889[25] = 0;
   out_4004472446183219889[26] = 0;
   out_4004472446183219889[27] = 0;
   out_4004472446183219889[28] = 0;
   out_4004472446183219889[29] = 0;
   out_4004472446183219889[30] = 1;
   out_4004472446183219889[31] = 0;
   out_4004472446183219889[32] = 0;
   out_4004472446183219889[33] = 0;
   out_4004472446183219889[34] = 0;
   out_4004472446183219889[35] = 0;
   out_4004472446183219889[36] = 0;
   out_4004472446183219889[37] = 0;
   out_4004472446183219889[38] = 0;
   out_4004472446183219889[39] = 0;
   out_4004472446183219889[40] = 0;
   out_4004472446183219889[41] = 0;
   out_4004472446183219889[42] = 0;
   out_4004472446183219889[43] = 0;
   out_4004472446183219889[44] = 0;
   out_4004472446183219889[45] = 0;
   out_4004472446183219889[46] = 0;
   out_4004472446183219889[47] = 0;
   out_4004472446183219889[48] = 0;
   out_4004472446183219889[49] = 0;
   out_4004472446183219889[50] = 0;
   out_4004472446183219889[51] = 0;
   out_4004472446183219889[52] = 0;
   out_4004472446183219889[53] = 1;
   out_4004472446183219889[54] = 0;
   out_4004472446183219889[55] = 0;
   out_4004472446183219889[56] = 0;
   out_4004472446183219889[57] = 0;
   out_4004472446183219889[58] = 0;
   out_4004472446183219889[59] = 0;
   out_4004472446183219889[60] = 0;
   out_4004472446183219889[61] = 0;
   out_4004472446183219889[62] = 0;
   out_4004472446183219889[63] = 0;
   out_4004472446183219889[64] = 0;
   out_4004472446183219889[65] = 0;
}
void h_32(double *state, double *unused, double *out_8020283997342969519) {
   out_8020283997342969519[0] = state[3];
   out_8020283997342969519[1] = state[4];
   out_8020283997342969519[2] = state[5];
   out_8020283997342969519[3] = state[6];
}
void H_32(double *state, double *unused, double *out_1796831926024392669) {
   out_1796831926024392669[0] = 0;
   out_1796831926024392669[1] = 0;
   out_1796831926024392669[2] = 0;
   out_1796831926024392669[3] = 1;
   out_1796831926024392669[4] = 0;
   out_1796831926024392669[5] = 0;
   out_1796831926024392669[6] = 0;
   out_1796831926024392669[7] = 0;
   out_1796831926024392669[8] = 0;
   out_1796831926024392669[9] = 0;
   out_1796831926024392669[10] = 0;
   out_1796831926024392669[11] = 0;
   out_1796831926024392669[12] = 0;
   out_1796831926024392669[13] = 0;
   out_1796831926024392669[14] = 0;
   out_1796831926024392669[15] = 0;
   out_1796831926024392669[16] = 0;
   out_1796831926024392669[17] = 0;
   out_1796831926024392669[18] = 0;
   out_1796831926024392669[19] = 0;
   out_1796831926024392669[20] = 0;
   out_1796831926024392669[21] = 0;
   out_1796831926024392669[22] = 0;
   out_1796831926024392669[23] = 0;
   out_1796831926024392669[24] = 0;
   out_1796831926024392669[25] = 0;
   out_1796831926024392669[26] = 1;
   out_1796831926024392669[27] = 0;
   out_1796831926024392669[28] = 0;
   out_1796831926024392669[29] = 0;
   out_1796831926024392669[30] = 0;
   out_1796831926024392669[31] = 0;
   out_1796831926024392669[32] = 0;
   out_1796831926024392669[33] = 0;
   out_1796831926024392669[34] = 0;
   out_1796831926024392669[35] = 0;
   out_1796831926024392669[36] = 0;
   out_1796831926024392669[37] = 0;
   out_1796831926024392669[38] = 0;
   out_1796831926024392669[39] = 0;
   out_1796831926024392669[40] = 0;
   out_1796831926024392669[41] = 0;
   out_1796831926024392669[42] = 0;
   out_1796831926024392669[43] = 0;
   out_1796831926024392669[44] = 0;
   out_1796831926024392669[45] = 0;
   out_1796831926024392669[46] = 0;
   out_1796831926024392669[47] = 0;
   out_1796831926024392669[48] = 0;
   out_1796831926024392669[49] = 1;
   out_1796831926024392669[50] = 0;
   out_1796831926024392669[51] = 0;
   out_1796831926024392669[52] = 0;
   out_1796831926024392669[53] = 0;
   out_1796831926024392669[54] = 0;
   out_1796831926024392669[55] = 0;
   out_1796831926024392669[56] = 0;
   out_1796831926024392669[57] = 0;
   out_1796831926024392669[58] = 0;
   out_1796831926024392669[59] = 0;
   out_1796831926024392669[60] = 0;
   out_1796831926024392669[61] = 0;
   out_1796831926024392669[62] = 0;
   out_1796831926024392669[63] = 0;
   out_1796831926024392669[64] = 0;
   out_1796831926024392669[65] = 0;
   out_1796831926024392669[66] = 0;
   out_1796831926024392669[67] = 0;
   out_1796831926024392669[68] = 0;
   out_1796831926024392669[69] = 0;
   out_1796831926024392669[70] = 0;
   out_1796831926024392669[71] = 0;
   out_1796831926024392669[72] = 1;
   out_1796831926024392669[73] = 0;
   out_1796831926024392669[74] = 0;
   out_1796831926024392669[75] = 0;
   out_1796831926024392669[76] = 0;
   out_1796831926024392669[77] = 0;
   out_1796831926024392669[78] = 0;
   out_1796831926024392669[79] = 0;
   out_1796831926024392669[80] = 0;
   out_1796831926024392669[81] = 0;
   out_1796831926024392669[82] = 0;
   out_1796831926024392669[83] = 0;
   out_1796831926024392669[84] = 0;
   out_1796831926024392669[85] = 0;
   out_1796831926024392669[86] = 0;
   out_1796831926024392669[87] = 0;
}
void h_13(double *state, double *unused, double *out_3300464686285788565) {
   out_3300464686285788565[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_3300464686285788565[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_3300464686285788565[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_7803543419208219348) {
   out_7803543419208219348[0] = 0;
   out_7803543419208219348[1] = 0;
   out_7803543419208219348[2] = 0;
   out_7803543419208219348[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_7803543419208219348[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_7803543419208219348[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_7803543419208219348[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_7803543419208219348[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_7803543419208219348[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_7803543419208219348[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_7803543419208219348[10] = 0;
   out_7803543419208219348[11] = 0;
   out_7803543419208219348[12] = 0;
   out_7803543419208219348[13] = 0;
   out_7803543419208219348[14] = 0;
   out_7803543419208219348[15] = 0;
   out_7803543419208219348[16] = 0;
   out_7803543419208219348[17] = 0;
   out_7803543419208219348[18] = 0;
   out_7803543419208219348[19] = 0;
   out_7803543419208219348[20] = 0;
   out_7803543419208219348[21] = 0;
   out_7803543419208219348[22] = 0;
   out_7803543419208219348[23] = 0;
   out_7803543419208219348[24] = 0;
   out_7803543419208219348[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_7803543419208219348[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_7803543419208219348[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_7803543419208219348[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_7803543419208219348[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_7803543419208219348[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_7803543419208219348[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_7803543419208219348[32] = 0;
   out_7803543419208219348[33] = 0;
   out_7803543419208219348[34] = 0;
   out_7803543419208219348[35] = 0;
   out_7803543419208219348[36] = 0;
   out_7803543419208219348[37] = 0;
   out_7803543419208219348[38] = 0;
   out_7803543419208219348[39] = 0;
   out_7803543419208219348[40] = 0;
   out_7803543419208219348[41] = 0;
   out_7803543419208219348[42] = 0;
   out_7803543419208219348[43] = 0;
   out_7803543419208219348[44] = 0;
   out_7803543419208219348[45] = 0;
   out_7803543419208219348[46] = 0;
   out_7803543419208219348[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_7803543419208219348[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_7803543419208219348[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_7803543419208219348[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_7803543419208219348[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_7803543419208219348[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_7803543419208219348[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_7803543419208219348[54] = 0;
   out_7803543419208219348[55] = 0;
   out_7803543419208219348[56] = 0;
   out_7803543419208219348[57] = 0;
   out_7803543419208219348[58] = 0;
   out_7803543419208219348[59] = 0;
   out_7803543419208219348[60] = 0;
   out_7803543419208219348[61] = 0;
   out_7803543419208219348[62] = 0;
   out_7803543419208219348[63] = 0;
   out_7803543419208219348[64] = 0;
   out_7803543419208219348[65] = 0;
}
void h_14(double *state, double *unused, double *out_7482255631790547869) {
   out_7482255631790547869[0] = state[10];
   out_7482255631790547869[1] = state[11];
   out_7482255631790547869[2] = state[12];
}
void H_14(double *state, double *unused, double *out_6918441833798946868) {
   out_6918441833798946868[0] = 0;
   out_6918441833798946868[1] = 0;
   out_6918441833798946868[2] = 0;
   out_6918441833798946868[3] = 0;
   out_6918441833798946868[4] = 0;
   out_6918441833798946868[5] = 0;
   out_6918441833798946868[6] = 0;
   out_6918441833798946868[7] = 0;
   out_6918441833798946868[8] = 0;
   out_6918441833798946868[9] = 0;
   out_6918441833798946868[10] = 1;
   out_6918441833798946868[11] = 0;
   out_6918441833798946868[12] = 0;
   out_6918441833798946868[13] = 0;
   out_6918441833798946868[14] = 0;
   out_6918441833798946868[15] = 0;
   out_6918441833798946868[16] = 0;
   out_6918441833798946868[17] = 0;
   out_6918441833798946868[18] = 0;
   out_6918441833798946868[19] = 0;
   out_6918441833798946868[20] = 0;
   out_6918441833798946868[21] = 0;
   out_6918441833798946868[22] = 0;
   out_6918441833798946868[23] = 0;
   out_6918441833798946868[24] = 0;
   out_6918441833798946868[25] = 0;
   out_6918441833798946868[26] = 0;
   out_6918441833798946868[27] = 0;
   out_6918441833798946868[28] = 0;
   out_6918441833798946868[29] = 0;
   out_6918441833798946868[30] = 0;
   out_6918441833798946868[31] = 0;
   out_6918441833798946868[32] = 0;
   out_6918441833798946868[33] = 1;
   out_6918441833798946868[34] = 0;
   out_6918441833798946868[35] = 0;
   out_6918441833798946868[36] = 0;
   out_6918441833798946868[37] = 0;
   out_6918441833798946868[38] = 0;
   out_6918441833798946868[39] = 0;
   out_6918441833798946868[40] = 0;
   out_6918441833798946868[41] = 0;
   out_6918441833798946868[42] = 0;
   out_6918441833798946868[43] = 0;
   out_6918441833798946868[44] = 0;
   out_6918441833798946868[45] = 0;
   out_6918441833798946868[46] = 0;
   out_6918441833798946868[47] = 0;
   out_6918441833798946868[48] = 0;
   out_6918441833798946868[49] = 0;
   out_6918441833798946868[50] = 0;
   out_6918441833798946868[51] = 0;
   out_6918441833798946868[52] = 0;
   out_6918441833798946868[53] = 0;
   out_6918441833798946868[54] = 0;
   out_6918441833798946868[55] = 0;
   out_6918441833798946868[56] = 1;
   out_6918441833798946868[57] = 0;
   out_6918441833798946868[58] = 0;
   out_6918441833798946868[59] = 0;
   out_6918441833798946868[60] = 0;
   out_6918441833798946868[61] = 0;
   out_6918441833798946868[62] = 0;
   out_6918441833798946868[63] = 0;
   out_6918441833798946868[64] = 0;
   out_6918441833798946868[65] = 0;
}
void h_33(double *state, double *unused, double *out_306515413301644296) {
   out_306515413301644296[0] = state[16];
   out_306515413301644296[1] = state[17];
   out_306515413301644296[2] = state[18];
}
void H_33(double *state, double *unused, double *out_853915441544362285) {
   out_853915441544362285[0] = 0;
   out_853915441544362285[1] = 0;
   out_853915441544362285[2] = 0;
   out_853915441544362285[3] = 0;
   out_853915441544362285[4] = 0;
   out_853915441544362285[5] = 0;
   out_853915441544362285[6] = 0;
   out_853915441544362285[7] = 0;
   out_853915441544362285[8] = 0;
   out_853915441544362285[9] = 0;
   out_853915441544362285[10] = 0;
   out_853915441544362285[11] = 0;
   out_853915441544362285[12] = 0;
   out_853915441544362285[13] = 0;
   out_853915441544362285[14] = 0;
   out_853915441544362285[15] = 0;
   out_853915441544362285[16] = 1;
   out_853915441544362285[17] = 0;
   out_853915441544362285[18] = 0;
   out_853915441544362285[19] = 0;
   out_853915441544362285[20] = 0;
   out_853915441544362285[21] = 0;
   out_853915441544362285[22] = 0;
   out_853915441544362285[23] = 0;
   out_853915441544362285[24] = 0;
   out_853915441544362285[25] = 0;
   out_853915441544362285[26] = 0;
   out_853915441544362285[27] = 0;
   out_853915441544362285[28] = 0;
   out_853915441544362285[29] = 0;
   out_853915441544362285[30] = 0;
   out_853915441544362285[31] = 0;
   out_853915441544362285[32] = 0;
   out_853915441544362285[33] = 0;
   out_853915441544362285[34] = 0;
   out_853915441544362285[35] = 0;
   out_853915441544362285[36] = 0;
   out_853915441544362285[37] = 0;
   out_853915441544362285[38] = 0;
   out_853915441544362285[39] = 1;
   out_853915441544362285[40] = 0;
   out_853915441544362285[41] = 0;
   out_853915441544362285[42] = 0;
   out_853915441544362285[43] = 0;
   out_853915441544362285[44] = 0;
   out_853915441544362285[45] = 0;
   out_853915441544362285[46] = 0;
   out_853915441544362285[47] = 0;
   out_853915441544362285[48] = 0;
   out_853915441544362285[49] = 0;
   out_853915441544362285[50] = 0;
   out_853915441544362285[51] = 0;
   out_853915441544362285[52] = 0;
   out_853915441544362285[53] = 0;
   out_853915441544362285[54] = 0;
   out_853915441544362285[55] = 0;
   out_853915441544362285[56] = 0;
   out_853915441544362285[57] = 0;
   out_853915441544362285[58] = 0;
   out_853915441544362285[59] = 0;
   out_853915441544362285[60] = 0;
   out_853915441544362285[61] = 0;
   out_853915441544362285[62] = 1;
   out_853915441544362285[63] = 0;
   out_853915441544362285[64] = 0;
   out_853915441544362285[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_6327026773264915096) {
  H(in_vec, out_6327026773264915096);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_8067863775592439168) {
  err_fun(nom_x, delta_x, out_8067863775592439168);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_357558411111015608) {
  inv_err_fun(nom_x, true_x, out_357558411111015608);
}
void live_H_mod_fun(double *state, double *out_5377985231292781310) {
  H_mod_fun(state, out_5377985231292781310);
}
void live_f_fun(double *state, double dt, double *out_5336262391330574405) {
  f_fun(state,  dt, out_5336262391330574405);
}
void live_F_fun(double *state, double dt, double *out_5727986461689315061) {
  F_fun(state,  dt, out_5727986461689315061);
}
void live_h_4(double *state, double *unused, double *out_7307035997982969824) {
  h_4(state, unused, out_7307035997982969824);
}
void live_H_4(double *state, double *unused, double *out_6677252187169356223) {
  H_4(state, unused, out_6677252187169356223);
}
void live_h_9(double *state, double *unused, double *out_7482255631790547869) {
  h_9(state, unused, out_7482255631790547869);
}
void live_H_9(double *state, double *unused, double *out_6918441833798946868) {
  H_9(state, unused, out_6918441833798946868);
}
void live_h_10(double *state, double *unused, double *out_1748597886089026286) {
  h_10(state, unused, out_1748597886089026286);
}
void live_H_10(double *state, double *unused, double *out_7519167040950150340) {
  H_10(state, unused, out_7519167040950150340);
}
void live_h_12(double *state, double *unused, double *out_1491269639460264899) {
  h_12(state, unused, out_1491269639460264899);
}
void live_H_12(double *state, double *unused, double *out_6750035478508233598) {
  H_12(state, unused, out_6750035478508233598);
}
void live_h_35(double *state, double *unused, double *out_8419097311840231893) {
  h_35(state, unused, out_8419097311840231893);
}
void live_H_35(double *state, double *unused, double *out_4004472446183219889) {
  H_35(state, unused, out_4004472446183219889);
}
void live_h_32(double *state, double *unused, double *out_8020283997342969519) {
  h_32(state, unused, out_8020283997342969519);
}
void live_H_32(double *state, double *unused, double *out_1796831926024392669) {
  H_32(state, unused, out_1796831926024392669);
}
void live_h_13(double *state, double *unused, double *out_3300464686285788565) {
  h_13(state, unused, out_3300464686285788565);
}
void live_H_13(double *state, double *unused, double *out_7803543419208219348) {
  H_13(state, unused, out_7803543419208219348);
}
void live_h_14(double *state, double *unused, double *out_7482255631790547869) {
  h_14(state, unused, out_7482255631790547869);
}
void live_H_14(double *state, double *unused, double *out_6918441833798946868) {
  H_14(state, unused, out_6918441833798946868);
}
void live_h_33(double *state, double *unused, double *out_306515413301644296) {
  h_33(state, unused, out_306515413301644296);
}
void live_H_33(double *state, double *unused, double *out_853915441544362285) {
  H_33(state, unused, out_853915441544362285);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_init(live);
